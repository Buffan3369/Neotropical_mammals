################################################################################
# Name: 3-SALMA_smoothing.R
# Author: Lucas Buffan
# Date: 2023-12-13
# Aim: 'Smooth' SALMAs => match boundaries of the occurrences 
#   associated to a SALMA with those of their corresponding sub-epoch
################################################################################

library(readxl)
library(tidyverse)
library(palaeoverse)

## Load data -------------------------------------------------------------------
SubEpochs <- read_xlsx("./data_2023/time_bins/EarlyMidLate_epochs.xlsx")
SubEpochs$bin <- 1:nrow(SubEpochs) #add 'bin' columns for `bin_time`
SALMA_EOT <- read_xlsx("./data_2023/time_bins/SALMA_EOT.xlsx")
species_list <- readRDS("./data_2023/SPECIES_LISTS/4-Fully_cleaned_EOT_SA_Mammals_SALMA_kept.RDS")

## Bin SALMAs with the Sub-Epochs they most overlap with -----------------------
binning <- palaeoverse::bin_time(occdf = data.frame(max_ma = SALMA_EOT$max_ma,
                                                    min_ma = SALMA_EOT$min_ma),
                                 bins = SubEpochs,
                                 method = "majority")
SALMA_EOT_Sub_epoch <- sapply(X = binning$bin_assignment,
                                 FUN = function(x){
                                   return(SubEpochs$interval_name[which(SubEpochs$bin == x)])
                                 })
SALMA_EOT <- SALMA_EOT %>% add_column(Sub_Epoch = SALMA_EOT_Sub_epoch,
                              .after = "epoch")

## Subset occ associated to a SALMA --------------------------------------------
  #(Re)create Early/Late stage column
split_stage <- function(stage, early=TRUE){
  hyphen_split <- strsplit(stage, split = "-")[[1]]
  if(early == TRUE){
    return(hyphen_split[1])
  }
  else{
    if(length(hyphen_split) > 1){
      return(hyphen_split[2]) 
    }
    else{
      return(NA)
    }
  }
}
species_list <- species_list %>% add_column(Early_stage = sapply(X = species_list$stage,
                                                                 FUN = split_stage),
                                            Late_stage = sapply(X = species_list$stage,
                                                                FUN = split_stage,
                                                                early = FALSE),
                                            .after = "stage")
  #Split SALMA-associated occurrences
spl_EOT <- species_list %>% filter(Early_stage %in% SALMA_EOT$interval_name)
message(paste0("A total of ", nrow(spl_EOT), " occurrences (representing ",
               round( (nrow(spl_EOT) / nrow(species_list)), digits = 2 )*100,
               "% of the total) are associated to a SALMA."))

get_ref <- function(stage, Which=c("min", "max")){
  #get the ref age
  hyp_split <- strsplit(stage, split = "-")[[1]]
  if(length(hyp_split) > 1){
    corr_early <- SALMA_EOT$Sub_Epoch[which(SALMA_EOT$interval_name == hyp_split[1])]
    corr_late <- SALMA_EOT$Sub_Epoch[which(SALMA_EOT$interval_name == hyp_split[2])]
    ref_max <- SubEpochs$max_ma[which(SubEpochs$interval_name == corr_early)]
    ref_min <- SubEpochs$min_ma[which(SubEpochs$interval_name == corr_late)]
  }
  else{
    corr <- SALMA_EOT$Sub_Epoch[which(SALMA_EOT$interval_name == stage)]
    ref_max <- SubEpochs$max_ma[which(SubEpochs$interval_name == corr)]
    ref_min <- SubEpochs$min_ma[which(SubEpochs$interval_name == corr)]
  }
  #return
  if(Which == "min"){
    return(ref_min)
  }
  else{
    return(ref_max)
  }
}
spl_EOT$min_ma <- sapply(X = spl_EOT$stage, FUN = get_ref, Which = "min")
spl_EOT$max_ma <- sapply(X = spl_EOT$stage, FUN = get_ref, Which = "max")

## Merge the two datasets (SALMA/not_SALMA) and save ---------------------------
spl_not_EOT <- species_list %>% filter(Early_stage %in% SALMA_EOT$interval_name == FALSE)
spl <- rbind.data.frame(spl_not_EOT, spl_EOT)
spl <- spl %>% 
  select(-c(Early_stage, Late_stage)) %>% 
  arrange(order, family, genus, accepted_name, cc)
saveRDS(spl, "./data_2023/SPECIES_LISTS/5-Fully_cleaned_EOT_SA_Mammals_SALMA_smoothed.RDS")

## Write and save PyRate input -------------------------------------------------



