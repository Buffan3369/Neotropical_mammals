}
else if(x == "Bonapartherioidea"){
return("#7a0177")
}
else if(x == "Polydolopidae"){
return("#df65b0")
}
else if(x == "Borhyaenoidea"){
return("#b10026")
}
else if(x == "Hathliacynidae"){
return("#fd8d3c")
}
else{
return("black")
}
}
for(x in TsTe_met$retained_scale){
if(x == "Microbiotheria"){
print("#238443")
}
else if(x == "Caenolestidae"){
print("#034e7b")
}
else if(x == "Palaeothetoidea"){
print("#3690c0")
}
else if(x == "Argyrolagidae"){
print("#4a1486")
}
else if(x == "Bonapartherioidea"){
print("#7a0177")
}
else if(x == "Polydolopidae"){
print("#df65b0")
}
else if(x == "Borhyaenoidea"){
print("#b10026")
}
else if(x == "Hathliacynidae"){
print("#fd8d3c")
}
else{
print("black")
}
}
TsTe_met$retained_scale
TsTe_met <- read.table("./results_EXTENDED/SALMA_smoothed/genus_level/6-Order_level/Metatheria/BDCS/TsTe_Metatheria_SALMA_smoothed_genus_level.txt", header = T)
species_list_idx <- read.table("./data_2023/PyRate/EXTENDED/SALMA_smoothed/genus_level/5-Order_level/Metatheria_EOT_gen_occ_SALMA_smoothed_TaxonList.txt", header = T)
species_list_idx <- species_list_idx %>%
filter(Species != "Gaylordia") %>%
mutate(order = sapply(X = Species, FUN = function(x){unique(spl$order[which(spl$genus == x)])}),
family = sapply(X = Species, FUN = function(x){unique(spl$family[which(spl$genus == x)])}))
################################################################################
# Name: 3-Faunal_Turnover.R
# Author: Lucas Buffan
# Contact: lucas.l.buffan@gmail.com
# Aim: Script for Ts/Te plots per family and genera for different groups (SALMA
#       smoothed)
################################################################################
library(tidyverse)
library(deeptime)
library(ggpubr)
library(rphylopic)
library(readxl)
# Open species List
spl <- readRDS("./data_2023/SPECIES_LISTS/7-Fully_cleaned_EOT_extended_SA_Mammals_SALMA_kept_Tropics_Diet.RDS")
# Function returning estimated age boundaries of a family
Ori_ext <- function(fam, gen_fam_tbl, TsTe_tbl, time = c("Ts", "Te")){
tmp_fam <- gen_fam_tbl %>% filter(family == fam)
TsTe_tmp <- TsTe_tbl %>% filter(genus %in% tmp_fam$genus)
if(time == "Ts"){
return(max(TsTe_tmp$ts))
}
else if(time == "Te"){
return(min(TsTe_tmp$te))
}
}
# GEOSCALES
# First geoscale
gsc1 <- deeptime::epochs
gsc1 <- gsc1 %>% filter(min_age < 56)
# Set second geoscale
gsc2 <- read_xlsx("./data_2023/time_bins/EarlyMidLate_epochs.xlsx")
gsc2 <- gsc2 %>% rename(min_age = "min_ma", max_age = "max_ma", name = "interval_name")
TsTe_met <- read.table("./results_EXTENDED/SALMA_smoothed/genus_level/6-Order_level/Metatheria/BDCS/TsTe_Metatheria_SALMA_smoothed_genus_level.txt", header = T)
species_list_idx <- read.table("./data_2023/PyRate/EXTENDED/SALMA_smoothed/genus_level/5-Order_level/Metatheria_EOT_gen_occ_SALMA_smoothed_TaxonList.txt", header = T)
species_list_idx <- species_list_idx %>%
filter(Species != "Gaylordia") %>%
mutate(order = sapply(X = Species, FUN = function(x){unique(spl$order[which(spl$genus == x)])}),
family = sapply(X = Species, FUN = function(x){unique(spl$family[which(spl$genus == x)])}))
#higher-level taxonomy
syst <- read.csv("./data_2023/systematics/metatheria_genera_EOT.csv")
# add relevant info
Ts_met <- TsTe_met %>%
select(matches("ts"))
Te_met <- TsTe_met %>%
select(matches("te"))
TsTe_met <-TsTe_met %>%
mutate(mean_ts = rowMeans(Ts_met),
mean_te = rowMeans(Te_met),
genus = species_list_idx$Species,
order = species_list_idx$order) %>%
select(order, genus, mean_ts, mean_te)
rm(Ts_met, Te_met)
TsTe_met <- TsTe_met %>%
add_column(retained_scale = sapply(X = TsTe_met$genus, FUN = function(x){syst$retained_scale[which(syst$genus == x)]}),
.before = "genus")
# avoid blanks
TsTe_met$retained_scale[which(TsTe_met$retained_scale %in% c("", "Didelphidae"))] <- "Others"
TsTe_met <- TsTe_met %>%
mutate(y_colour = sapply(X = retained_scale, FUN = function(x){
if(x == "Microbiotheria"){
return("#238443")
}
else if(x == "Caenolestidae"){
return("#034e7b")
}
else if(x == "Palaeothetoidea"){
return("#3690c0")
}
else if(x == "Argyrolagidae"){
return("#4a1486")
}
else if(x == "Bonapartherioidea"){
return("#7a0177")
}
else if(x == "Polydolopidae"){
return("#df65b0")
}
else if(x == "Borhyaenoidea"){
return("#b10026")
}
else if(x == "Hathliacynidae"){
return("#fd8d3c")
}
else{
return("black")
}
})) %>%
mutate(retained_scale = factor(retained_scale, levels = c("Microbiotheria", "Caenolestidae", "Palaeothetoidea",
"Argyrolagidae", "Bonapartherioidea", "Polydolopidae",
"Borhyaenoidea", "Hathliacynidae")))
View(TsTe_met)
TsTe_met <- read.table("./results_EXTENDED/SALMA_smoothed/genus_level/6-Order_level/Metatheria/BDCS/TsTe_Metatheria_SALMA_smoothed_genus_level.txt", header = T)
species_list_idx <- read.table("./data_2023/PyRate/EXTENDED/SALMA_smoothed/genus_level/5-Order_level/Metatheria_EOT_gen_occ_SALMA_smoothed_TaxonList.txt", header = T)
species_list_idx <- species_list_idx %>%
filter(Species != "Gaylordia") %>%
mutate(order = sapply(X = Species, FUN = function(x){unique(spl$order[which(spl$genus == x)])}),
family = sapply(X = Species, FUN = function(x){unique(spl$family[which(spl$genus == x)])}))
#higher-level taxonomy
syst <- read.csv("./data_2023/systematics/metatheria_genera_EOT.csv")
# add relevant info
Ts_met <- TsTe_met %>%
select(matches("ts"))
Te_met <- TsTe_met %>%
select(matches("te"))
TsTe_met <-TsTe_met %>%
mutate(mean_ts = rowMeans(Ts_met),
mean_te = rowMeans(Te_met),
genus = species_list_idx$Species,
order = species_list_idx$order) %>%
select(order, genus, mean_ts, mean_te)
rm(Ts_met, Te_met)
TsTe_met <- TsTe_met %>%
add_column(retained_scale = sapply(X = TsTe_met$genus, FUN = function(x){syst$retained_scale[which(syst$genus == x)]}),
.before = "genus")
# avoid blanks
TsTe_met$retained_scale[which(TsTe_met$retained_scale %in% c("", "Didelphidae"))] <- "Others"
View(TsTe_met)
TsTe_met <- TsTe_met %>%
mutate(y_colour = sapply(X = retained_scale, FUN = function(x){
if(x == "Microbiotheria"){
return("#238443")
}
else if(x == "Caenolestidae"){
return("#034e7b")
}
else if(x == "Palaeothetoidea"){
return("#3690c0")
}
else if(x == "Argyrolagidae"){
return("#4a1486")
}
else if(x == "Bonapartherioidea"){
return("#7a0177")
}
else if(x == "Polydolopidae"){
return("#df65b0")
}
else if(x == "Borhyaenoidea"){
return("#b10026")
}
else if(x == "Hathliacynidae"){
return("#fd8d3c")
}
else{
return("black")
}
})) %>%
mutate(retained_scale = factor(retained_scale, levels = c("Microbiotheria", "Caenolestidae", "Palaeothetoidea",
"Argyrolagidae", "Bonapartherioidea", "Polydolopidae",
"Borhyaenoidea", "Hathliacynidae")))
View(TsTe_met)
TsTe_met <- read.table("./results_EXTENDED/SALMA_smoothed/genus_level/6-Order_level/Metatheria/BDCS/TsTe_Metatheria_SALMA_smoothed_genus_level.txt", header = T)
species_list_idx <- read.table("./data_2023/PyRate/EXTENDED/SALMA_smoothed/genus_level/5-Order_level/Metatheria_EOT_gen_occ_SALMA_smoothed_TaxonList.txt", header = T)
species_list_idx <- species_list_idx %>%
filter(Species != "Gaylordia") %>%
mutate(order = sapply(X = Species, FUN = function(x){unique(spl$order[which(spl$genus == x)])}),
family = sapply(X = Species, FUN = function(x){unique(spl$family[which(spl$genus == x)])}))
#higher-level taxonomy
syst <- read.csv("./data_2023/systematics/metatheria_genera_EOT.csv")
# add relevant info
Ts_met <- TsTe_met %>%
select(matches("ts"))
Te_met <- TsTe_met %>%
select(matches("te"))
TsTe_met <-TsTe_met %>%
mutate(mean_ts = rowMeans(Ts_met),
mean_te = rowMeans(Te_met),
genus = species_list_idx$Species,
order = species_list_idx$order) %>%
select(order, genus, mean_ts, mean_te)
rm(Ts_met, Te_met)
TsTe_met <- TsTe_met %>%
add_column(retained_scale = sapply(X = TsTe_met$genus, FUN = function(x){syst$retained_scale[which(syst$genus == x)]}),
.before = "genus")
# avoid blanks
TsTe_met$retained_scale[which(TsTe_met$retained_scale %in% c("", "Didelphidae"))] <- "Others"
TsTe_met <- TsTe_met %>%
mutate(y_colour = sapply(X = retained_scale, FUN = function(x){
if(x == "Microbiotheria"){
return("#238443")
}
else if(x == "Caenolestidae"){
return("#034e7b")
}
else if(x == "Palaeothetoidea"){
return("#3690c0")
}
else if(x == "Argyrolagidae"){
return("#4a1486")
}
else if(x == "Bonapartherioidea"){
return("#7a0177")
}
else if(x == "Polydolopidae"){
return("#df65b0")
}
else if(x == "Borhyaenoidea"){
return("#b10026")
}
else if(x == "Hathliacynidae"){
return("#fd8d3c")
}
else{
return("black")
}
}))
View(TsTe_met)
TsTe_met$retained_scale <- factor(TsTe_met$retained_scale, levels = c("Microbiotheria",
"Caenolestidae", "Palaeothetoidea",
"Argyrolagidae", "Bonapartherioidea", "Polydolopidae",
"Borhyaenoidea", "Hathliacynidae"))
View(TsTe_met)
TsTe_met <- read.table("./results_EXTENDED/SALMA_smoothed/genus_level/6-Order_level/Metatheria/BDCS/TsTe_Metatheria_SALMA_smoothed_genus_level.txt", header = T)
species_list_idx <- read.table("./data_2023/PyRate/EXTENDED/SALMA_smoothed/genus_level/5-Order_level/Metatheria_EOT_gen_occ_SALMA_smoothed_TaxonList.txt", header = T)
species_list_idx <- species_list_idx %>%
filter(Species != "Gaylordia") %>%
mutate(order = sapply(X = Species, FUN = function(x){unique(spl$order[which(spl$genus == x)])}),
family = sapply(X = Species, FUN = function(x){unique(spl$family[which(spl$genus == x)])}))
#higher-level taxonomy
syst <- read.csv("./data_2023/systematics/metatheria_genera_EOT.csv")
# add relevant info
Ts_met <- TsTe_met %>%
select(matches("ts"))
Te_met <- TsTe_met %>%
select(matches("te"))
TsTe_met <-TsTe_met %>%
mutate(mean_ts = rowMeans(Ts_met),
mean_te = rowMeans(Te_met),
genus = species_list_idx$Species,
order = species_list_idx$order) %>%
select(order, genus, mean_ts, mean_te)
rm(Ts_met, Te_met)
TsTe_met <- TsTe_met %>%
add_column(retained_scale = sapply(X = TsTe_met$genus, FUN = function(x){syst$retained_scale[which(syst$genus == x)]}),
.before = "genus")
# avoid blanks
TsTe_met$retained_scale[which(TsTe_met$retained_scale %in% c("", "Didelphidae"))] <- "Others"
TsTe_met <- TsTe_met %>%
mutate(y_colour = sapply(X = retained_scale, FUN = function(x){
if(x == "Microbiotheria"){
return("#238443")
}
else if(x == "Caenolestidae"){
return("#034e7b")
}
else if(x == "Palaeothetoidea"){
return("#3690c0")
}
else if(x == "Argyrolagidae"){
return("#4a1486")
}
else if(x == "Bonapartherioidea"){
return("#7a0177")
}
else if(x == "Polydolopidae"){
return("#df65b0")
}
else if(x == "Borhyaenoidea"){
return("#b10026")
}
else if(x == "Hathliacynidae"){
return("#fd8d3c")
}
else{
return("black")
}
}))
View(TsTe_met)
TsTe_met$retained_scale <- factor(TsTe_met$retained_scale, levels = c("Microbiotheria",
"Caenolestidae", "Palaeothentoidea",
"Argyrolagidae", "Bonapartherioidea", "Polydolopidae",
"Borhyaenoidea", "Hathliacynidae"))
View(TsTe_met)
TsTe_met <- read.table("./results_EXTENDED/SALMA_smoothed/genus_level/6-Order_level/Metatheria/BDCS/TsTe_Metatheria_SALMA_smoothed_genus_level.txt", header = T)
species_list_idx <- read.table("./data_2023/PyRate/EXTENDED/SALMA_smoothed/genus_level/5-Order_level/Metatheria_EOT_gen_occ_SALMA_smoothed_TaxonList.txt", header = T)
species_list_idx <- species_list_idx %>%
filter(Species != "Gaylordia") %>%
mutate(order = sapply(X = Species, FUN = function(x){unique(spl$order[which(spl$genus == x)])}),
family = sapply(X = Species, FUN = function(x){unique(spl$family[which(spl$genus == x)])}))
#higher-level taxonomy
syst <- read.csv("./data_2023/systematics/metatheria_genera_EOT.csv")
# add relevant info
Ts_met <- TsTe_met %>%
select(matches("ts"))
Te_met <- TsTe_met %>%
select(matches("te"))
TsTe_met <-TsTe_met %>%
mutate(mean_ts = rowMeans(Ts_met),
mean_te = rowMeans(Te_met),
genus = species_list_idx$Species,
order = species_list_idx$order) %>%
select(order, genus, mean_ts, mean_te)
rm(Ts_met, Te_met)
TsTe_met <- TsTe_met %>%
add_column(retained_scale = sapply(X = TsTe_met$genus, FUN = function(x){syst$retained_scale[which(syst$genus == x)]}),
.before = "genus")
# avoid blanks
TsTe_met$retained_scale[which(TsTe_met$retained_scale %in% c("", "Didelphidae"))] <- "Others"
View(TsTe_met)
TsTe_met <- TsTe_met %>%
mutate(y_colour = sapply(X = retained_scale, FUN = function(x){
if(x == "Microbiotheria"){
return("#238443")
}
else if(x == "Caenolestidae"){
return("#034e7b")
}
else if(x == "Palaeothetoidea"){
return("#3690c0")
}
else if(x == "Argyrolagidae"){
return("#4a1486")
}
else if(x == "Bonapartherioidea"){
return("#7a0177")
}
else if(x == "Polydolopidae"){
return("#df65b0")
}
else if(x == "Borhyaenoidea"){
return("#b10026")
}
else if(x == "Hathliacynidae"){
return("#fd8d3c")
}
else{
return("black")
}
}))
View(TsTe_met)
TsTe_met <- TsTe_met %>%
mutate(y_colour = sapply(X = retained_scale, FUN = function(x){
if(x == "Microbiotheria"){
return("#238443")
}
else if(x == "Caenolestidae"){
return("#034e7b")
}
else if(x == "Palaeothentoidea"){
return("#3690c0")
}
else if(x == "Argyrolagidae"){
return("#4a1486")
}
else if(x == "Bonapartherioidea"){
return("#7a0177")
}
else if(x == "Polydolopidae"){
return("#df65b0")
}
else if(x == "Borhyaenoidea"){
return("#b10026")
}
else if(x == "Hathliacynidae"){
return("#fd8d3c")
}
else{
return("black")
}
}))
TsTe_met$retained_scale <- factor(TsTe_met$retained_scale, levels = c("Microbiotheria",
"Caenolestidae", "Palaeothentoidea",
"Argyrolagidae", "Bonapartherioidea", "Polydolopidae",
"Borhyaenoidea", "Hathliacynidae"))
View(TsTe_met)
TsTe_met <- read.table("./results_EXTENDED/SALMA_smoothed/genus_level/6-Order_level/Metatheria/BDCS/TsTe_Metatheria_SALMA_smoothed_genus_level.txt", header = T)
species_list_idx <- read.table("./data_2023/PyRate/EXTENDED/SALMA_smoothed/genus_level/5-Order_level/Metatheria_EOT_gen_occ_SALMA_smoothed_TaxonList.txt", header = T)
species_list_idx <- species_list_idx %>%
filter(Species != "Gaylordia") %>%
mutate(order = sapply(X = Species, FUN = function(x){unique(spl$order[which(spl$genus == x)])}),
family = sapply(X = Species, FUN = function(x){unique(spl$family[which(spl$genus == x)])}))
#higher-level taxonomy
syst <- read.csv("./data_2023/systematics/metatheria_genera_EOT.csv")
# add relevant info
Ts_met <- TsTe_met %>%
select(matches("ts"))
Te_met <- TsTe_met %>%
select(matches("te"))
TsTe_met <-TsTe_met %>%
mutate(mean_ts = rowMeans(Ts_met),
mean_te = rowMeans(Te_met),
genus = species_list_idx$Species,
order = species_list_idx$order) %>%
select(order, genus, mean_ts, mean_te)
rm(Ts_met, Te_met)
TsTe_met <- TsTe_met %>%
add_column(retained_scale = sapply(X = TsTe_met$genus, FUN = function(x){syst$retained_scale[which(syst$genus == x)]}),
.before = "genus")
# avoid blanks
TsTe_met$retained_scale[which(TsTe_met$retained_scale %in% c("", "Didelphidae"))] <- "Others"
TsTe_met <- TsTe_met %>%
mutate(y_colour = sapply(X = retained_scale, FUN = function(x){
if(x == "Microbiotheria"){
return("#238443")
}
else if(x == "Caenolestidae"){
return("#034e7b")
}
else if(x == "Palaeothentoidea"){
return("#3690c0")
}
else if(x == "Argyrolagidae"){
return("#4a1486")
}
else if(x == "Bonapartherioidea"){
return("#7a0177")
}
else if(x == "Polydolopidae"){
return("#df65b0")
}
else if(x == "Borhyaenoidea"){
return("#b10026")
}
else if(x == "Hathliacynidae"){
return("#fd8d3c")
}
else{
return("black")
}
}))
TsTe_met$retained_scale <- factor(TsTe_met$retained_scale, levels = c("Microbiotheria",
"Caenolestidae", "Palaeothentoidea",
"Argyrolagidae", "Bonapartherioidea", "Polydolopidae",
"Borhyaenoidea", "Hathliacynidae",
"Others"))
View(TsTe_met)
## 1) Ts-arranged genus plot
TsTe_met %>%
arrange(mean_ts) %>%
ggplot(aes(y = fct_inorder(genus), yend = fct_inorder(genus))) +
geom_segment(aes(x = mean_ts, xend = mean_te, colour = retained_scale)) +
# colours
scale_colour_manual(values = c("#238443", "#034e7b", "#3690c0", "#4a1486",
"#7a0177", "#df65b0", "#b10026", "#fd8d3c", "black")) +
scale_x_reverse(breaks = seq(from = 23.03, to = 50, by = 5)) +
labs(x = "Time (Ma)", y = "Genus", colour = "Sub-Family") +
# add silhouette
add_phylopic(x = 49.2, y = 5, name = "Propalaehoplophorus australis", ysize = 4) +
annotate(geom = "text", x = 49, y = 2, label = "Xenarthra", size = 4) +
# EOT line
geom_vline(xintercept = 33.9, linetype="dashed", color = "red", linewidth = 0.8) +
annotate(geom = "text", x = 31.5, y = 34, label = "EOT", size = 7, colour = "red") +
# Artificially extend plotting window
annotate(geom = "text", x = 35, y = 38.5, label = " ") +
annotate(geom = "text", x = 35, y = 0.5, label = " ") +
# GTS
coord_geo(pos = list("bottom", "bottom"),
dat = list(gsc2, gsc1),
abbrv = list(T, F),
center_end_labels = TRUE,
height = unit(1.5, "line"),
size = "auto",
xlim = c(23.03, 53)) +
theme(axis.text.y = element_text(size = 6, colour = TsTe_met$y_colour),
axis.title.x = element_text(size = 18),
axis.title.y = element_text(size = 18),
axis.text.x = element_text(size = 15),
legend.key=element_rect(fill="white"))
rm(list = ls())
