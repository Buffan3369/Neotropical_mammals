geom_line(colour = "#045a8d") +
labs(y = "Average temperature (°C)") +
scale_x_reverse() +
scale_y_continuous(breaks = seq(15, 30, 2.5)) +
theme(panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "#045a8d"),
axis.text = element_text(colour = "#045a8d"),
axis.title.y = element_text(colour = "#045a8d")) +
# Temporal bands
annotate(geom = "rect", xmin = 47.8, xmax = Inf, fill = "grey10", ymin = -Inf, ymax = Inf, alpha = 0.1, linewidth = 0) +
annotate(geom = "rect", xmin = 33.9, xmax = 37.71, fill = "grey10", ymin = -Inf, ymax = Inf, alpha = 0.1, linewidth = 0) +
annotate(geom = "rect", xmin = -Inf, xmax = 27.8, fill = "grey10", ymin = -Inf, ymax = Inf, alpha = 0.1, linewidth = 0)
t_plot <- Temp_Cnz %>%
filter(Age < 52 & Age > 24) %>%
ggplot(aes(x = Age, y = Temperature)) +
geom_line(colour = "#045a8d") +
labs(y = "Average temperature (°C)") +
scale_x_reverse() +
scale_y_continuous(breaks = seq(15, 30, 2.5)) +
theme(panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "#045a8d"),
axis.text = element_text(colour = "#045a8d"),
axis.title.y = element_text(colour = "#045a8d")) +
# Temporal bands
annotate(geom = "rect", xmin = 47.8, xmax = Inf, fill = "grey10", ymin = -Inf, ymax = Inf, alpha = 0.1, linewidth = 0) +
annotate(geom = "rect", xmin = 33.9, xmax = 37.71, fill = "grey10", ymin = -Inf, ymax = Inf, alpha = 0.1, linewidth = 0) +
annotate(geom = "rect", xmin = -Inf, xmax = 27.8, fill = "grey10", ymin = -Inf, ymax = Inf, alpha = 0.1, linewidth = 0)
ggsave("./figures/Figure_4_new/temp_plot.pdf",
plot = t_plot,
height = 100,
width = 150,
units = "mm")
ggsave("./figures/Figure_4_new/temp_plot.pdf",
plot = t_plot,
height = 80,
width = 150,
units = "mm")
100
ggsave("./figures/Figure_4_new/temp_plot.pdf",
plot = t_plot,
height = 100,
width = 150,
units = "mm")
ggsave("./figures/Figure_4_new/LTT_plot.pdf",
plot = ltt.plot,
height = 100,
width = 150,
units = "mm")
#plot
ltt.plot <- ltt_plot(ltt_tbl,
stage_x_breaks = FALSE,
manual_x_breaks = seq(25, 50, 5),
axes.labelsize=15,
ticks.labelsize = 12,
x_lab = "Time (Ma)",
y_lab = "Diversity (nb. genera)",
y_breaks = seq(0,(round(max(ltt_tbl$Diversity), -1) + 10),20),
y_limits = c(40,(round(max(ltt_tbl$Diversity), -1) + 12)),
display_gts = TRUE,
xlim = c(52, 24),
avg_col = "#006d2c",
ribbon_col = "#74c476",
plot.border = FALSE,
x.axis = TRUE,
display_EECO_MECO = TRUE,
several_gts = TRUE,
geoscale = gsc1_bis,
geoscale2 = gsc2_bis,
geoscale_height = unit(1, "line"),
geoscale_labelsize = 4,
abbr = list(TRUE, FALSE)) +
# Temporal bands
annotate(geom = "rect", xmin = 47.8, xmax = Inf, fill = "grey10", ymin = -Inf, ymax = Inf, alpha = 0.1, linewidth = 0) +
annotate(geom = "rect", xmin = 33.9, xmax = 37.71, fill = "grey10", ymin = -Inf, ymax = Inf, alpha = 0.1, linewidth = 0) +
annotate(geom = "rect", xmin = -Inf, xmax = 27.8, fill = "grey10", ymin = -Inf, ymax = Inf, alpha = 0.1, linewidth = 0)
ggsave("./figures/Figure_4_new/LTT_plot.pdf",
plot = ltt.plot,
height = 100,
width = 150,
units = "mm")
ggsave("./figures/Figure_4_new/LTT_plot.pdf",
plot = ltt.plot,
height = 150,
width = 150,
units = "mm")
t_plot <- Temp_Cnz %>%
filter(Age < 52 & Age > 33.9) %>%
ggplot(aes(x = Age, y = Temperature)) +
geom_line(colour = "#045a8d") +
labs(y = "Average temperature (°C)") +
scale_x_reverse() +
scale_y_continuous(breaks = seq(15, 30, 2.5)) +
theme(panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "#045a8d"),
axis.text = element_text(colour = "#045a8d"),
axis.title.y = element_text(colour = "#045a8d")) +
# Temporal bands
annotate(geom = "rect", xmin = 47.8, xmax = Inf, fill = "grey10", ymin = -Inf, ymax = Inf, alpha = 0.1, linewidth = 0) +
annotate(geom = "rect", xmin = 33.9, xmax = 37.71, fill = "grey10", ymin = -Inf, ymax = Inf, alpha = 0.1, linewidth = 0) +
annotate(geom = "rect", xmin = -Inf, xmax = 27.8, fill = "grey10", ymin = -Inf, ymax = Inf, alpha = 0.1, linewidth = 0)
ggsave("./figures/Figure_4_new/temp_plot.pdf",
plot = t_plot,
height = 100,
width = 150,
units = "mm")
rm(list = ls())
dev.off()
################################################################################
# Name: Frequency of rate shift figure (for RJMCMC outputs)
# Author: Lucas Buffan
# Contact: lucas.l.buffan@gmail.com
# Aim: Script for Ts/Te plots Metatheria
################################################################################
source("~/Documents/GitHub/CorsaiR/R/1-extract_param_from_PyRate_outputs.R")
source("~/Documents/GitHub/CorsaiR/R/2-plotting_facilities.R")
## Geoscales
# Set second geoscale
gsc2 <- read_xlsx("./data_2023/time_bins/EarlyMidLate_epochs.xlsx")
gsc2 <- gsc2 %>% rename(min_age = "min_ma", max_age = "max_ma", name = "interval_name")
library(readxl)
library(tidyverse)
## Geoscales
# Set second geoscale
gsc2 <- read_xlsx("./data_2023/time_bins/EarlyMidLate_epochs.xlsx")
gsc2 <- gsc2 %>% rename(min_age = "min_ma", max_age = "max_ma", name = "interval_name")
## SALMA kept
f_rate_shift_tbl_k <- extract_histo_tbl("./results_EXTENDED/SALMA_kept/genus_level/1-Full/MH_sampler/combined_logs/RTT_plots.r")
plot_list_kept <- freq_rate_shift(data = f_rate_shift_tbl_k[[1]],
bf2 = f_rate_shift_tbl_k[[2]],
bf6 = f_rate_shift_tbl_k[[3]],
x_annots = 33,
y_annot_bf2 = 0.06,
y_annot_bf6 = 0.225,
x_breaks = seq(50, 25, -5),
x_limits = c(52, 24),
y_limits = c(0, 0.8),
several_gts = TRUE,
geoscale2 = gsc2,
abbr = list(TRUE, FALSE))
plot_list_kept
plot_list_kept[[1]]
plot_list_kept[[2]]
library(ggpubr)
panel_kept <- ggarrange(plotlist = plot_list_kept, ncol = 2, labels = c("(A)", "(B)"))
panel_kept
ggsave("./figures/supp_figs/Freq_rate_shift/SALMA_kept.pdf", plot = panel_kept, height = 100, width = 200, units = "mm")
ggsave("./figures/supp_figs/Freq_rate_shift/SALMA_kept.pdf", plot = panel_kept, height = 200, width = 400, units = "mm")
## SALMA smoothed
# Set second geoscale
gsc2 <- read_xlsx("./data_2023/time_bins/EarlyMidLate_epochs.xlsx")
gsc2 <- gsc2 %>% rename(min_age = "min_ma", max_age = "max_ma", name = "interval_name")
f_rate_shift_tbl_s <- extract_histo_tbl("./results_EXTENDED/SALMA_smoothed/genus_level/1-Full/MH_sampler/combined_logs/RTT_plots.r")
plot_list_smoothed <- freq_rate_shift(data = f_rate_shift_tbl_s[[1]],
bf2 = f_rate_shift_tbl_s[[2]],
bf6 = f_rate_shift_tbl_s[[3]],
x_annots = 33,
y_annot_bf2 = 0.06,
y_annot_bf6 = 0.225,
x_breaks = seq(50, 25, -5),
x_limits = c(52, 24),
y_limits = c(0, 0.8),
several_gts = TRUE,
geoscale2 = gsc2,
abbr = list(TRUE, FALSE))
panel_smoothed <- ggarrange(plotlist = plot_list_smoothed, ncol = 2, labels = c("(A)", "(B)"))
ggsave("./figures/supp_figs/Freq_rate_shift/SALMA_smoothed.pdf", plot = panel_smoothed, height = 200, width = 400, units = "mm")
## SALMA kept
# Set second geoscale
gsc2 <- read_xlsx("./data_2023/time_bins/SALMA_EOT.xlsx")
gsc2 <- gsc2 %>%
rename(min_age = "min_ma", max_age = "max_ma", name = "interval_name") %>%
mutate(min_age = sapply(min_age, as.numeric), max_age = sapply(max_age, as.numeric))
f_rate_shift_tbl_k <- extract_histo_tbl("./results_EXTENDED/SALMA_kept/genus_level/1-Full/MH_sampler/combined_logs/RTT_plots.r")
plot_list_kept <- freq_rate_shift(data = f_rate_shift_tbl_k[[1]],
bf2 = f_rate_shift_tbl_k[[2]],
bf6 = f_rate_shift_tbl_k[[3]],
x_annots = 33,
y_annot_bf2 = 0.06,
y_annot_bf6 = 0.225,
x_breaks = seq(50, 25, -5),
x_limits = c(52, 24),
y_limits = c(0, 0.8),
several_gts = TRUE,
geoscale2 = gsc2,
abbr = list(TRUE, FALSE))
panel_kept <- ggarrange(plotlist = plot_list_kept, ncol = 2, labels = c("(A)", "(B)"))
ggsave("./figures/supp_figs/Freq_rate_shift/SALMA_kept.pdf", plot = panel_kept, height = 200, width = 400, units = "mm")
library(tidyverse)
library(deeptime)
library(ggpubr)
library(rphylopic)
library(readxl)
source("./R/useful/helper_functions.R")
# Open species List
spl <- readRDS("./data_2023/SPECIES_LISTS/7-Fully_cleaned_EOT_extended_SA_Mammals_SALMA_kept_Tropics_Diet.RDS")
spl$genus <- sapply(X = spl$genus, FUN = spc_to_udsc) # e.g. "cf. Tarapotomys" => "cf._Tarapotomys"
# Function returning estimated age boundaries of a family
Ori_ext <- function(fam, gen_fam_tbl, TsTe_tbl, time = c("Ts", "Te")){
tmp_fam <- gen_fam_tbl %>% filter(family == fam)
TsTe_tmp <- TsTe_tbl %>% filter(genus %in% tmp_fam$genus)
if(time == "Ts"){
return(max(TsTe_tmp$ts))
}
else if(time == "Te"){
return(min(TsTe_tmp$te))
}
}
# GEOSCALES
# First geoscale
gsc1 <- deeptime::epochs
gsc1 <- gsc1 %>% filter(min_age < 56)
# Set second geoscale
gsc2 <- read_xlsx("./data_2023/time_bins/EarlyMidLate_epochs.xlsx")
gsc2 <- gsc2 %>% rename(min_age = "min_ma", max_age = "max_ma", name = "interval_name")
## Display diversification rates -----------------------------------------------
# 1) RTT plot
source("~/Documents/GitHub/CorsaiR/R/1-extract_param_from_PyRate_outputs.R")
source("~/Documents/GitHub/CorsaiR/R/2-plotting_facilities.R")
rtt_path <- "./results_EXTENDED/SALMA_smoothed/genus_level/1-Full/BDS/combined_logs/combined_10_marginal_rates_RTT.r"
ltt_path <- "./results_EXTENDED/SALMA_smoothed/genus_level/1-Full/MH_sampler/LTT/Full_EOT_gen_occ_SALMA_smoothed_10_Grj_KEEP_se_est_ltt.txt"
# 3) LTT
ltt_tbl <- read.table(ltt_path, header = TRUE)
ltt_tbl <- ltt_tbl %>%
rename("Age" = time, "Diversity" = diversity, "min_Diversity" = m_div, "max_Diversity" = M_div) %>%
filter(Age > 24 & Age < 52)
ltt_tbl$Age[1] <- 24
ltt_tbl$Age[nrow(ltt_tbl)] <- 52
View(ltt_tbl)
View(ltt_tbl)
## Additional quantification: number of lineages lost between the mid Eocene and the Early Oligocene
# Genera
g_48 <- ltt_tbl$Diversity[which(ltt_tbl$Age == 48.01337)]
which(ltt_tbl$Age == 48.01337)
round(g_48-g_32)
## Additional quantification: number of lineages lost between the mid Eocene and the Early Oligocene
# Genera
g_48 <- ltt_tbl$Diversity[240] # age: 48.01337 Ma
g_32 <- ltt_tbl$Diversity[81] # age: 32.07574 Ma
round(g_48-g_32)
# Species
ltt_sp <- "./results_EXTENDED/SALMA_smoothed/species_level/1-Full/MH_sampler/LTT/Full_EOT_sp_occ_SALMA_smoothed_12_Grj_KEEP_se_est_ltt.txt"
ltt_tbl_sp <- read.table(ltt_pth_sp, header = TRUE)
# Species
ltt_pth_sp <- "./results_EXTENDED/SALMA_smoothed/species_level/1-Full/MH_sampler/LTT/Full_EOT_sp_occ_SALMA_smoothed_12_Grj_KEEP_se_est_ltt.txt"
ltt_tbl_sp <- read.table(ltt_pth_sp, header = TRUE)
View(ltt_tbl_sp)
g_48 <- ltt_tbl$Diversity[240] # age: 48.01337 Ma
g_32 <- ltt_tbl$Diversity[81] # age: 32.07574 Ma
# Species
ltt_pth_sp <- "./results_EXTENDED/SALMA_smoothed/species_level/1-Full/MH_sampler/LTT/Full_EOT_sp_occ_SALMA_smoothed_12_Grj_KEEP_se_est_ltt.txt"
ltt_tbl_sp <- read.table(ltt_pth_sp, header = TRUE)
sp_48 <- ltt_tbl_sp$Diversity[346] # age: 48.08234 Ma
sp_32 <- ltt_tbl_sp$Diversity[186] # age: 32.02970 Ma
# Show the results
cat(paste0("Number of lost genera: ", round(g_48-g_32), "\n"))
cat(paste0("Number of lost species: ", round(sp_48-sp_32)))
sp_48 <- ltt_tbl_sp$Diversity[346] # age: 48.08234 Ma
ltt_tbl_sp <- read.table(ltt_pth_sp, header = TRUE)
View(ltt_tbl_sp)
sp_48 <- ltt_tbl_sp$diversity[346] # age: 48.08234 Ma
sp_32 <- ltt_tbl_sp$diversity[186] # age: 32.02970 Ma
# Show the results
cat(paste0("Number of lost genera: ", round(g_48-g_32), "\n"))
cat(paste0("Number of lost species: ", round(sp_48-sp_32)))
################################################################################
# Name: 1-Figure1.R
# Author: Lucas Buffan
# Contact: lucas.l.buffan@gmail.com
# Aim: Script for figure 1, faunal turnover across all mammals + RTT
################################################################################
library(tidyverse)
library(deeptime)
library(ggpubr)
library(rphylopic)
library(readxl)
source("./R/useful/helper_functions.R")
## 1-LONGEVITY PLOT ------------------------------------------------------------
# Open species List
spl <- readRDS("./data_2023/SPECIES_LISTS/7-Fully_cleaned_EOT_extended_SA_Mammals_SALMA_kept_Tropics_Diet.RDS")
spl$genus <- sapply(X = spl$genus, FUN = spc_to_udsc) # e.g. "cf. Tarapotomys" => "cf._Tarapotomys"
# Function returning estimated age boundaries of a family
Ori_ext <- function(fam, gen_fam_tbl, TsTe_tbl, time = c("Ts", "Te")){
tmp_fam <- gen_fam_tbl %>% filter(family == fam)
TsTe_tmp <- TsTe_tbl %>% filter(genus %in% tmp_fam$genus)
if(time == "Ts"){
return(max(TsTe_tmp$ts))
}
else if(time == "Te"){
return(min(TsTe_tmp$te))
}
}
# GEOSCALES
# First geoscale
gsc1 <- deeptime::epochs
gsc1 <- gsc1 %>% filter(min_age < 56)
# Set second geoscale
gsc2 <- read_xlsx("./data_2023/time_bins/EarlyMidLate_epochs.xlsx")
gsc2 <- gsc2 %>% rename(min_age = "min_ma", max_age = "max_ma", name = "interval_name")
# DATA Preprocessing
# Reference dataset for taxonomic equivalents
ref <- read.table("./data_2023/PyRate/EXTENDED/SALMA_kept/genus_level/1-Full/Full_EOT_gen_occ_SALMA_kept_TaxonList.txt", header = TRUE)
ref$order <- sapply(X = ref$Species, FUN = function(x){unique(spl$order[which(spl$genus == x)])})
ref$family <- sapply(X = ref$Species, FUN = function(x){unique(spl$family[which(spl$genus == x)])})
# Full TsTe table
TsTe_ttl <- read.table("./results_EXTENDED/SALMA_smoothed/genus_level/1-Full/MH_sampler/LTT/Full_EOT_gen_occ_SALMA_smoothed_10_Grj_KEEP_se_est.txt",
header = TRUE)
TsTe_ttl <- TsTe_ttl %>%
add_column(order = ref$order, family = ref$family, genus = ref$Species)
# Compute mean ts and te
Ts_ttl <- TsTe_ttl %>%
select(matches("ts"))
Te_ttl <- TsTe_ttl %>%
select(matches("te"))
TsTe_ttl <- TsTe_ttl %>%
mutate(mean_ts = rowMeans(Ts_ttl),
mean_te = rowMeans(Te_ttl)) %>%
select(order, family, genus, mean_ts, mean_te) %>%
rename(ts = "mean_ts", te = "mean_te") %>%
filter(ts > 24 & te < 52 & genus %in% c("Bryanpattersonia", "Palaeocladosictis") == FALSE) # artefactual genera
rm(Ts_ttl, Te_ttl)
# define a key for displaying orders
TsTe_ttl$class <- "Other_mammalia"
for(key in keys(tax_dict)){
corr_odr <- values(tax_dict[key])
idx <- which(TsTe_ttl$order %in% corr_odr)
TsTe_ttl$class[idx] <- key
}
TsTe_ttl <- TsTe_ttl %>%
mutate(class = factor(class, levels = c("Other_mammalia", "Metatheria", "Xenarthra", "Rodentia", "Other_SANUs", "Notoungulata"))) %>%
arrange(class, ts)
# set extent of each class
MinMax <- data.frame("Other_mammalia" = c(0, which.max(which(TsTe_ttl$class == "Other_mammalia"))+1))
for(cl in c("Metatheria", "Xenarthra", "Rodentia", "Other_SANUs", "Notoungulata")){
corr_idx <- which(TsTe_ttl$class == cl)
MinMax <- MinMax %>% add_column(cl = c(corr_idx[which.min(corr_idx)],
corr_idx[which.max(corr_idx)]+1))
}
colnames(MinMax) <- c("Other_mammalia", "Metatheria", "Xenarthra", "Rodentia", "Other_SANUs", "Notoungulata")
# compute Jaccard's similarities between Eocene and Oligocene assemblages of each of or five groups
JI <- data.frame(group = keys(tax_dict),
jac = sapply(X = keys(tax_dict),
FUN = function(x){
sub <- TsTe_ttl %>% filter(class == x)
Eoc_gen <- sub$genus[which(sub$ts >= 33.9)]
Olig_gen <-  sub$genus[which(sub$te <= 33.9)]
return(round(jaccard(Eoc_gen, Olig_gen), digits = 2))
}))
View(JI)
# compute Jaccard's similarities between Eocene and Oligocene assemblages of each of or five groups
JI <- data.frame(group = keys(tax_dict))
jac_idx <- function(t){
sub <- TsTe_ttl %>% filter(class == x)
Eoc_gen <- sub$genus[which(sub$ts >= t)]
Olig_gen <-  sub$genus[which(sub$te <= t)]
return(round(jaccard(Eoc_gen, Olig_gen), digits = 2))
}
# compute Jaccard's similarities between Eocene and Oligocene assemblages of each of or five groups
JI <- data.frame(group = keys(tax_dict))
jac_idx <- function(t){
sub <- TsTe_ttl %>% filter(class == x)
Eoc_gen <- sub$genus[which(sub$ts >= t)]
Olig_gen <-  sub$genus[which(sub$te <= t)]
return(round(jaccard(Eoc_gen, Olig_gen), digits = 2))
}
for(t in seq(52, 24, 0.1)){
JI <- JI %>% add_column(paste0("jac_", t) = sapply(X = keys(tax_dict), FUN = jac_idx(t)))
for(t in seq(52, 24, 0.1)){
JI <- JI %>% add_column(sapply(X = keys(tax_dict), FUN = jac_idx(t)))
}
for(t in seq(52, 24, -0.1)){
JI <- JI %>% add_column(sapply(X = keys(tax_dict), FUN = jac_idx(t)))
}
jac_idx <- function(t, class){
sub <- TsTe_ttl %>% filter(class == x)
Eoc_gen <- sub$genus[which(sub$ts >= t)]
Olig_gen <-  sub$genus[which(sub$te <= t)]
return(round(jaccard(Eoc_gen, Olig_gen), digits = 2))
}
for(t in seq(52, 24, -0.1)){
JI <- JI %>% add_column(sapply(X = keys(tax_dict), FUN = function(x){return(jac_idx(t, class = x))}))
}
sub <- TsTe_ttl %>% filter(class == cls)
# compute Jaccard's similarities between Eocene and Oligocene assemblages of each of or five groups
JI <- data.frame(group = keys(tax_dict))
jac_idx <- function(t, cls){
sub <- TsTe_ttl %>% filter(class == cls)
Eoc_gen <- sub$genus[which(sub$ts >= t)]
Olig_gen <-  sub$genus[which(sub$te <= t)]
return(round(jaccard(Eoc_gen, Olig_gen), digits = 2))
}
for(t in seq(52, 24, -0.1)){
JI <- JI %>% add_column(sapply(X = keys(tax_dict), FUN = function(x){return(jac_idx(t, class = x))}))
}
for(t in seq(52, 24, -0.1)){
JI <- JI %>% add_column(sapply(X = keys(tax_dict), FUN = function(x){return(jac_idx(t, cls = x))}))
}
View(JI)
for(t in seq(52, 24, -0.1)){
JI <- JI %>% add_column(pastes("jac_", t) = apply(X = keys(tax_dict), FUN = function(x){return(jac_idx(t, cls = x))}))
# compute Jaccard's similarities between Eocene and Oligocene assemblages of each of or five groups
JI <- data.frame(group = keys(tax_dict))
jac_idx <- function(t, cls){
sub <- TsTe_ttl %>% filter(class == cls)
Eoc_gen <- sub$genus[which(sub$ts >= t)]
Olig_gen <-  sub$genus[which(sub$te <= t)]
return(round(jaccard(Eoc_gen, Olig_gen), digits = 2))
}
for(t in seq(52, 24, -0.1)){
JI <- JI %>% add_column(apply(X = keys(tax_dict), FUN = function(x){return(jac_idx(t, cls = x))}))
colnames(JI) <- c(colnames(JI)[1:length(JI)-1], pastes("jac_", t))
}
# compute Jaccard's similarities between Eocene and Oligocene assemblages of each of or five groups
JI <- data.frame(group = keys(tax_dict))
jac_idx <- function(t, cls){
sub <- TsTe_ttl %>% filter(class == cls)
Eoc_gen <- sub$genus[which(sub$ts >= t)]
Olig_gen <-  sub$genus[which(sub$te <= t)]
return(round(jaccard(Eoc_gen, Olig_gen), digits = 2))
}
for(t in seq(52, 24, -0.1)){
JI <- JI %>% add_column(sapply(X = keys(tax_dict), FUN = function(x){return(jac_idx(t, cls = x))}))
colnames(JI) <- c(colnames(JI)[1:length(JI)-1], pastes("jac_", t))
}
for(t in seq(52, 24, -0.1)){
JI <- JI %>% add_column(sapply(X = keys(tax_dict), FUN = function(x){return(jac_idx(t, cls = x))}))
colnames(JI) <- c(colnames(JI)[1:length(JI)-1], paste0("jac_", t))
}
View(JI)
# compute Jaccard's similarities between Eocene and Oligocene assemblages of each of or five groups
JI <- data.frame(group = keys(tax_dict))
jac_idx <- function(t, cls){
sub <- TsTe_ttl %>% filter(class == cls)
Eoc_gen <- sub$genus[which(sub$ts >= t)]
Olig_gen <-  sub$genus[which(sub$te <= t)]
return(round(jaccard(Eoc_gen, Olig_gen), digits = 2))
}
t=52
JI <- JI %>% add_column(sapply(X = keys(tax_dict), FUN = function(x){return(jac_idx(t, cls = x))}))
colnames(JI) <- c(colnames(JI)[1:length(JI)-1], paste0("jac_", t))
View(JI)
JI <- data.frame(group = keys(tax_dict))
jac_idx <- function(t, cls){
sub <- TsTe_ttl %>% filter(class == cls)
Eoc_gen <- sub$genus[which(sub$ts >= t)]
Olig_gen <-  sub$genus[which(sub$te <= t)]
return(round(jaccard(Eoc_gen, Olig_gen), digits = 2))
}
for(t in seq(52, 24, -0.1)){
JI <- JI %>% add_column(sapply(X = keys(tax_dict), FUN = function(x){return(jac_idx(t, cls = x))}))
colnames(JI) <- c(colnames(JI)[1:length(JI)-1], paste0("jac_", t))
}
View(JI)
plot(x = seq(52, 24, -0.1),
y = JI[2,1:length(colnames(JI))])
JI[2,1:length(colnames(JI))]
length(JI[2,1:length(colnames(JI))])
length(seq(52, 24, -0.1))
seq(52, 24, -0.1)
plot(x = seq(52, 24, -0.1),
y = JI[2,2:length(colnames(JI))])
View(JI)
abline(v = 33.9)
JI <- data.frame(age = seq(52, 24, -0.1))
jac_idx <- function(t, cls){
sub <- TsTe_ttl %>% filter(class == cls)
Eoc_gen <- sub$genus[which(sub$ts >= t)]
Olig_gen <-  sub$genus[which(sub$te <= t)]
return(round(jaccard(Eoc_gen, Olig_gen), digits = 2))
}
for(c in keys(tax_dict)){
JI <- JI %>% add_column(c = sapply(X = seq(52, 24, -0.1), FUN = function(x){return(jac_idx(t = x, cls = c))}))
}
View(JI)
# compute Jaccard's similarities between Eocene and Oligocene assemblages of each of or five groups
JI <- data.frame(age = seq(52, 24, -0.1))
jac_idx <- function(t, cls){
sub <- TsTe_ttl %>% filter(class == cls)
Eoc_gen <- sub$genus[which(sub$ts >= t)]
Olig_gen <-  sub$genus[which(sub$te <= t)]
return(round(jaccard(Eoc_gen, Olig_gen), digits = 2))
}
for(cls in keys(tax_dict)){
JI <- JI %>% add_column(sapply(X = seq(52, 24, -0.1), FUN = function(x){return(jac_idx(t = x, cls = cls))}))
colnames(JI) <- c(colnames(JI)[1:length(JI)-1], cls)
}
plot(x = JI$age, y = JI$Metatheria)
abline(v = 33.9)
par(mforw = c(2, 3))
plot(x = JI$age, y = JI$Metatheria)
abline(v = 33.9)
plot(x = JI$age, y = JI$Notoungulata)
abline(v = 33.9)
plot(x = JI$age, y = JI$Other_SANUs)
abline(v = 33.9)
plot(x = JI$age, y = JI$Rodentia)
abline(v = 33.9)
plot(x = JI$age, y = JI$Xenarthra)
abline(v = 33.9)
par(mfrow = c(2, 3))
plot(x = JI$age, y = JI$Metatheria)
abline(v = 33.9)
plot(x = JI$age, y = JI$Notoungulata)
abline(v = 33.9)
plot(x = JI$age, y = JI$Other_SANUs)
abline(v = 33.9)
plot(x = JI$age, y = JI$Rodentia)
abline(v = 33.9)
plot(x = JI$age, y = JI$Xenarthra)
abline(v = 33.9)
