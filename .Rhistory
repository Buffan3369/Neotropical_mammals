mcmclog <- mcmclog[-c(1:burnin),]
burnin <- 10
mcmclog <- mcmclog[-c(1:burnin),]
?subset
ori <- subset(mcmclog, select = grepl("lambda_", names(df)))
ori <- subset(mcmclog, select = grepl("lambda_", names(mcmclog)))
ori_rates <- sapply(X = colnames(ori),
FUN = function(x){
col <- ori[, c(x)]
return(mean(col, na.rm = TRUE))
})
library(ggplot2)
ggplot(data = time_bins, aes(x = max_ma, y = ori_rates)) +
geom_step()
ggplot(data = time_bins, aes(x = max_ma, y = ori_rates)) +
scale_x_reverse() +
geom_step()
ggplot(data = time_bins, aes(x = max_ma, y = ori_rates)) +
#  scale_x_reverse() +
geom_step()
time_bins$ori <- rev(ori_rates) #lambda_0 : oldest, lambda_n : youngest
ggplot(data = time_bins, aes(x = max_ma, y = ori_rates)) +
#  scale_x_reverse() +
geom_step()
ggplot(data = time_bins, aes(x = max_ma, y = ori_rates)) +
scale_x_reverse() +
geom_step()
mcmclog <- read.table("./results_EXTENDED/SALMA_smoothed/genus_level/4-Tropical_Extratropical/BDCS/Tropical/combined_logs/combined_20mcmc.log",
header = TRUE, sep = "\t")
time_bins <- read.table("./data_2023/time_bins/BDS_fixShifts.txt")
colnames(time_bins) <- "max_ma"
time_bins$min_ma <- c(time_bins$max_ma[-c(1)], 15)
burnin <- 10
mcmclog <- mcmclog[-c(1:burnin),]
ori <- subset(mcmclog, select = grepl("lambda_", names(mcmclog)))
ori_rates <- sapply(X = colnames(ori),
FUN = function(x){
col <- ori[, c(x)]
return(mean(col, na.rm = TRUE))
})
time_bins$ori <- ori_rates #lambda_0 : oldest, lambda_n : youngest
ggplot(data = time_bins, aes(x = max_ma, y = ori_rates)) +
scale_x_reverse() +
geom_step()
View(ori)
time_bins$ori <- rev(ori_rates) #lambda_0 : oldest, lambda_n : youngest
ggplot(data = time_bins, aes(x = max_ma, y = ori_rates)) +
scale_x_reverse() +
geom_step()
rev(ori_rates)
time_bins <- read.table("./data_2023/time_bins/BDS_fixShifts.txt")
colnames(time_bins) <- "max_ma"
time_bins$min_ma <- c(time_bins$max_ma[-c(1)], 15)
burnin <- 10
mcmclog <- mcmclog[-c(1:burnin),]
ori <- subset(mcmclog, select = grepl("lambda_", names(mcmclog)))
ori_rates <- sapply(X = colnames(ori),
FUN = function(x){
col <- ori[, c(x)]
return(mean(col, na.rm = TRUE))
})
ori_rates
time_bins$ori <- rev(ori_rates) #lambda_0 : oldest, lambda_n : youngest
ggplot(data = time_bins, aes(x = max_ma, y = ori_rates)) +
scale_x_reverse() +
geom_step()
time_bins <- read.table("./data_2023/time_bins/BDS_fixShifts.txt")
colnames(time_bins) <- "max_ma"
time_bins$min_ma <- c(15, time_bins$max_ma[-c(1)])
time_bins$ori <- rev(ori_rates) #lambda_0 : oldest, lambda_n : youngest
ggplot(data = time_bins, aes(x = max_ma, y = ori)) +
scale_x_reverse() +
geom_step()
time_bins[nrow(time_bins)+1, ] <- c(15, ori_rates[1])
time_bins <- read.table("./data_2023/time_bins/BDS_fixShifts.txt")
colnames(time_bins) <- "max_ma"
ori <- subset(mcmclog, select = grepl("lambda_", names(mcmclog)))
ori_rates <- sapply(X = colnames(ori),
FUN = function(x){
col <- ori[, c(x)]
return(mean(col, na.rm = TRUE))
})
time_bins$ori <- rev(ori_rates) #lambda_0 : oldest, lambda_n : youngest
time_bins[nrow(time_bins)+1, ] <- c(15, ori_rates[1])
ggplot(data = time_bins, aes(x = max_ma, y = ori)) +
scale_x_reverse() +
geom_step()
time_bins <- read.table("./data_2023/time_bins/BDS_fixShifts.txt")
colnames(time_bins) <- "max_ma"
burnin <- 10
mcmclog <- mcmclog[-c(1:burnin),]
ori <- subset(mcmclog, select = grepl("lambda_", names(mcmclog)))
mcmclog <- read.table("./results_EXTENDED/SALMA_smoothed/genus_level/4-Tropical_Extratropical/BDCS/Tropical/combined_logs/combined_20mcmc.log",
header = TRUE, sep = "\t")
time_bins <- read.table("./data_2023/time_bins/BDS_fixShifts.txt")
colnames(time_bins) <- "max_ma"
burnin <- 10
mcmclog <- mcmclog[-c(1:burnin),]
ori <- subset(mcmclog, select = grepl("lambda_", names(mcmclog)))
ori_rates <- sapply(X = colnames(ori),
FUN = function(x){
col <- ori[, c(x)]
return(mean(col, na.rm = TRUE))
})
time_bins$ori <- rev(ori_rates) #lambda_0 : oldest, lambda_n : youngest
time_bins[nrow(time_bins)+1, ] <- c(15, ori_rates[length(ori_rates)])
ggplot(data = time_bins, aes(x = max_ma, y = ori)) +
scale_x_reverse() +
geom_step()
library(tidyverse)
grepl("lambda_", names(mcmclog))
as.numeric(quantile(ori$lambda_0, probs = c(0.025, 0.975)))
time_bins <- rev(read.table("./data_2023/time_bins/BDS_fixShifts.txt"))
time_bins <- read.table("./data_2023/time_bins/BDS_fixShifts.txt")
View(time_bins)
time_bins <- rev(read.table("./data_2023/time_bins/BDS_fixShifts.txt"))
View(time_bins)
rev(time_bins)
time_bins
map_df(time_bins)
time_bins %>% map_df(rev)
# Extend time_bins
time_bins <- time_bins %>%
map_df(rev) %>%
add_column(mean_lambda = sapply(X = colnames(ori),
FUN = function(x){
col <- ori[, c(x)]
return(mean(col, na.rm = TRUE))
}),
min_HPD_lambda = sapply(X = colnames(ori),
FUN = function(x){
col <- ori[, c(x)]
return(as.numeric(quantile(ori$lambda_0, probs = c(0.025))))
}),
max_HPD_lambda = sapply(X = colnames(ori),
FUN = function(x){
col <- ori[, c(x)]
return(as.numeric(quantile(ori$lambda_0, probs = c(0.975))))
}),
mean_mu = sapply(X = colnames(ext),
FUN = function(x){
col <- ext[, c(x)]
return(mean(col, na.rm = TRUE))
}),
min_HPD_mu = sapply(X = colnames(ext),
FUN = function(x){
col <- ext[, c(x)]
return(as.numeric(quantile(ext$lambda_0, probs = c(0.025))))
}),
max_HPD_mu = sapply(X = colnames(ext),
FUN = function(x){
col <- ext[, c(x)]
return(as.numeric(quantile(ext$lambda_0, probs = c(0.975))))
})) %>%
add_row(time_bins[nrow(time_bins),])
library(tidyverse)
mcmclog <- read.table("./results_EXTENDED/SALMA_smoothed/genus_level/4-Tropical_Extratropical/BDCS/Tropical/combined_logs/combined_20mcmc.log",
header = TRUE, sep = "\t")
time_bins <- read.table("./data_2023/time_bins/BDS_fixShifts.txt")
colnames(time_bins) <- "max_ma"
# Burn-in
burnin <- 10
mcmclog <- mcmclog[-c(1:burnin),]
# Origination rates table
ori <- subset(mcmclog, select = grepl("lambda_", names(mcmclog)))
# Extinction rates table
ext <- subset(mcmclog, select = grepl("lambda_", names(mcmclog)))
# Extend time_bins
time_bins <- time_bins %>%
map_df(rev) %>%
add_column(mean_lambda = sapply(X = colnames(ori),
FUN = function(x){
col <- ori[, c(x)]
return(mean(col, na.rm = TRUE))
}),
min_HPD_lambda = sapply(X = colnames(ori),
FUN = function(x){
col <- ori[, c(x)]
return(as.numeric(quantile(ori$lambda_0, probs = c(0.025))))
}),
max_HPD_lambda = sapply(X = colnames(ori),
FUN = function(x){
col <- ori[, c(x)]
return(as.numeric(quantile(ori$lambda_0, probs = c(0.975))))
}),
mean_mu = sapply(X = colnames(ext),
FUN = function(x){
col <- ext[, c(x)]
return(mean(col, na.rm = TRUE))
}),
min_HPD_mu = sapply(X = colnames(ext),
FUN = function(x){
col <- ext[, c(x)]
return(as.numeric(quantile(ext$lambda_0, probs = c(0.025))))
}),
max_HPD_mu = sapply(X = colnames(ext),
FUN = function(x){
col <- ext[, c(x)]
return(as.numeric(quantile(ext$lambda_0, probs = c(0.975))))
})) %>%
add_row(time_bins[nrow(time_bins),])
# Extend time_bins
time_bins <- time_bins %>%
map_df(rev) %>%
add_column(mean_lambda = sapply(X = colnames(ori),
FUN = function(x){
col <- ori[, c(x)]
return(mean(col, na.rm = TRUE))
}),
min_HPD_lambda = sapply(X = colnames(ori),
FUN = function(x){
col <- ori[, c(x)]
return(as.numeric(quantile(ori$lambda_0, probs = c(0.025))))
}),
max_HPD_lambda = sapply(X = colnames(ori),
FUN = function(x){
col <- ori[, c(x)]
return(as.numeric(quantile(ori$lambda_0, probs = c(0.975))))
}),
mean_mu = sapply(X = colnames(ext),
FUN = function(x){
col <- ext[, c(x)]
return(mean(col, na.rm = TRUE))
}),
min_HPD_mu = sapply(X = colnames(ext),
FUN = function(x){
col <- ext[, c(x)]
return(as.numeric(quantile(ext$lambda_0, probs = c(0.025))))
}),
max_HPD_mu = sapply(X = colnames(ext),
FUN = function(x){
col <- ext[, c(x)]
return(as.numeric(quantile(ext$lambda_0, probs = c(0.975))))
}))
View(time_bins)
mcmclog <- read.table("./results_EXTENDED/SALMA_smoothed/genus_level/4-Tropical_Extratropical/BDCS/Tropical/combined_logs/combined_20mcmc.log",
header = TRUE, sep = "\t")
time_bins <- read.table("./data_2023/time_bins/BDS_fixShifts.txt")
colnames(time_bins) <- "max_ma"
# Burn-in
burnin <- 10
mcmclog <- mcmclog[-c(1:burnin),]
# Origination rates table
ori <- subset(mcmclog, select = grepl("lambda_", names(mcmclog)))
# Extinction rates table
ext <- subset(mcmclog, select = grepl("lambda_", names(mcmclog)))
# Extend time_bins
time_bins <- time_bins %>%
map_df(rev) %>%
add_column(mean_lambda = sapply(X = colnames(ori),
FUN = function(x){
col <- ori[, c(x)]
return(mean(col, na.rm = TRUE))
}),
min_HPD_lambda = sapply(X = colnames(ori),
FUN = function(x){
col <- ori[, c(x)]
return(as.numeric(quantile(col, probs = c(0.025))))
}),
max_HPD_lambda = sapply(X = colnames(ori),
FUN = function(x){
col <- ori[, c(x)]
return(as.numeric(quantile(col, probs = c(0.975))))
}),
mean_mu = sapply(X = colnames(ext),
FUN = function(x){
col <- ext[, c(x)]
return(mean(col, na.rm = TRUE))
}),
min_HPD_mu = sapply(X = colnames(ext),
FUN = function(x){
col <- ext[, c(x)]
return(as.numeric(quantile(ext$col, probs = c(0.025))))
}),
max_HPD_mu = sapply(X = colnames(ext),
FUN = function(x){
col <- ext[, c(x)]
return(as.numeric(quantile(ext$col, probs = c(0.975))))
}))
View(time_bins)
View(ext)
# Extinction rates table
ext <- subset(mcmclog, select = grepl("mu_", names(mcmclog)))
time_bins <- read.table("./data_2023/time_bins/BDS_fixShifts.txt")
colnames(time_bins) <- "max_ma"
# Extend time_bins
time_bins <- time_bins %>%
map_df(rev) %>%
add_column(mean_lambda = sapply(X = colnames(ori),
FUN = function(x){
col <- ori[, c(x)]
return(mean(col, na.rm = TRUE))
}),
min_HPD_lambda = sapply(X = colnames(ori),
FUN = function(x){
col <- ori[, c(x)]
return(as.numeric(quantile(col, probs = c(0.025))))
}),
max_HPD_lambda = sapply(X = colnames(ori),
FUN = function(x){
col <- ori[, c(x)]
return(as.numeric(quantile(col, probs = c(0.975))))
}),
mean_mu = sapply(X = colnames(ext),
FUN = function(x){
col <- ext[, c(x)]
return(mean(col, na.rm = TRUE))
}),
min_HPD_mu = sapply(X = colnames(ext),
FUN = function(x){
col <- ext[, c(x)]
return(as.numeric(quantile(ext$col, probs = c(0.025))))
}),
max_HPD_mu = sapply(X = colnames(ext),
FUN = function(x){
col <- ext[, c(x)]
return(as.numeric(quantile(ext$col, probs = c(0.975))))
}))
View(time_bins)
time_bins <- read.table("./data_2023/time_bins/BDS_fixShifts.txt")
colnames(time_bins) <- "max_ma"
# Origination rates table
ori <- subset(mcmclog, select = grepl("lambda_", names(mcmclog)))
# Extinction rates table
ext <- subset(mcmclog, select = grepl("mu_", names(mcmclog)))
# Extend time_bins
time_bins <- time_bins %>%
map_df(rev) %>%
add_column(mean_lambda = sapply(X = colnames(ori),
FUN = function(x){
col <- ori[, c(x)]
return(mean(col, na.rm = TRUE))
}),
min_HPD_lambda = sapply(X = colnames(ori),
FUN = function(x){
col <- ori[, c(x)]
return(as.numeric(quantile(col, probs = c(0.025))))
}),
max_HPD_lambda = sapply(X = colnames(ori),
FUN = function(x){
col <- ori[, c(x)]
return(as.numeric(quantile(col, probs = c(0.975))))
}),
mean_mu = sapply(X = colnames(ext),
FUN = function(x){
col <- ext[, c(x)]
return(mean(col, na.rm = TRUE))
}),
min_HPD_mu = sapply(X = colnames(ext),
FUN = function(x){
col <- ext[, c(x)]
return(as.numeric(quantile(col, probs = c(0.025))))
}),
max_HPD_mu = sapply(X = colnames(ext),
FUN = function(x){
col <- ext[, c(x)]
return(as.numeric(quantile(col, probs = c(0.975))))
}))
View(time_bins)
library(pammtools)
?geom_stepribbon
time_bins[nrow(time_bins)+1, ] <- c(15, time_bins[nrow(time_bins), colnames(time_bins)[2:length(colnames(time_bins))]])
ggplot(data = time_bins, aes(x = max_ma, y = mean_lambda)) +
scale_x_reverse() +
geom_step() +
geom_stepribbon(aes(ymin = min_HPD_lambda, ymax = max_HPD_lambda))
ggplot(data = time_bins, aes(x = max_ma, y = mean_lambda)) +
scale_x_reverse() +
geom_step() +
geom_stepribbon(aes(ymin = min_HPD_lambda, ymax = max_HPD_lambda), alpha = 0.2)
library(tidyverse)
df <- tidyquant::tq_get("HOUST",get="economic.data",from="2000-01-01")
library(gganimate)
install.packages("tidyquant")
library(tidyquant)
df <- tidyquant::tq_get("HOUST",get="economic.data",from="2000-01-01")
N <- 20
rm(list = ls())
library(tidyverse)
library(tidyquant)
df <- tidyquant::tq_get("HOUST",get="economic.data",from="2000-01-01")
N <- 20
xlist1 <- sort(c(max(df$price),tail(df$price,1),
pretty(c(0,min(df$price)),n=N,min.n=N)))
View(df)
?pretty
c(max(df$price),tail(df$price,1)
)
xlist1
ggplot(data=df, aes(x=date,y=price))+geom_line()+
mapply(function(ylow,yhigh,col,a=0.1){geom_ribbon(aes(ymin=ylow,ymax=yhigh),alpha=a,fill=col)},
head(xlist1,-1),
tail(xlist1,-1),
"red",
seq(0,0.3,length=length(xlist1)-1))+
geom_line(size=2,color="white")+
geom_line(size=1.1)+
geom_ribbon(aes(ymin=price,ymax=Inf),fill="white",alpha=0.8)+
theme_minimal(base_size=18)+
theme(plot.caption=element_text(hjust=0),
plot.title=element_text(face="bold",size=rel(1.2)))+
labs(x="date (monthly)",y="",
subtitle="U.S. Housing Starts (1000s, SAAR)",
title="Oh Yeah!",
caption="@lenkiefer")
?mapply
head(xlist1,-1)
tail(xlist1,-1)
mapply(rep, times = 1:4, x = 4:1)
N <- 100
library(tidyverse)
library(pammtools)
mcmclog <- read.table("./results_EXTENDED/SALMA_smoothed/genus_level/4-Tropical_Extratropical/BDCS/Tropical/combined_logs/combined_20mcmc.log",
header = TRUE, sep = "\t")
time_bins <- read.table("./data_2023/time_bins/BDS_fixShifts.txt")
colnames(time_bins) <- "max_ma"
# Burn-in
burnin <- 10
mcmclog <- mcmclog[-c(1:burnin),]
# Origination rates table
ori <- subset(mcmclog, select = grepl("lambda_", names(mcmclog)))
# Extinction rates table
ext <- subset(mcmclog, select = grepl("mu_", names(mcmclog)))
# Extend time_bins
time_bins <- time_bins %>%
map_df(rev) %>%
add_column(mean_lambda = sapply(X = colnames(ori),
FUN = function(x){
col <- ori[, c(x)]
return(mean(col, na.rm = TRUE))
}),
min_HPD_lambda = sapply(X = colnames(ori),
FUN = function(x){
col <- ori[, c(x)]
return(as.numeric(quantile(col, probs = c(0.025))))
}),
max_HPD_lambda = sapply(X = colnames(ori),
FUN = function(x){
col <- ori[, c(x)]
return(as.numeric(quantile(col, probs = c(0.975))))
}),
mean_mu = sapply(X = colnames(ext),
FUN = function(x){
col <- ext[, c(x)]
return(mean(col, na.rm = TRUE))
}),
min_HPD_mu = sapply(X = colnames(ext),
FUN = function(x){
col <- ext[, c(x)]
return(as.numeric(quantile(col, probs = c(0.025))))
}),
max_HPD_mu = sapply(X = colnames(ext),
FUN = function(x){
col <- ext[, c(x)]
return(as.numeric(quantile(col, probs = c(0.975))))
}))
time_bins[nrow(time_bins)+1, ] <- c(15, time_bins[nrow(time_bins), colnames(time_bins)[2:length(colnames(time_bins))]])
N <- 100
ggplot(data = time_bins, aes(x = max_ma, y = mean_lambda)) +
scale_x_reverse() +
geom_step() +
mapply(FUN = function(ylow, yhigh, a, col){geom_stepribbon(aes(ymin = ylow, ymax = yhigh), fill = col, alpha = a)},
ylow = pretty(min_HPD_lambda, max_HPD_lambda-0.01, n=N, min.n = N),
yhigh = pretty(min_HPD_lambda+0.01, max_HPD_lambda, n=N, min.n = N),
a = seq(0, 0.3, length = N),
col = "#08519c")
pretty(c(0,min(df$price)),n=N,min.n=N)
sort(c(max(df$price),tail(df$price,1),
pretty(c(0,min(df$price)),n=N,min.n=N)))
N <- 20
pretty(c(0,min(df$price)),n=N,min.n=N)
N <- 20
c(max(df$price),tail(df$price,1))
pretty(c(0,min(df$price)),n=N,min.n=N))
pretty(c(0,min(df$price)),n=N,min.n=N)
tail(df$price,1)
mean(df$price)
dev.off()
rm(list = ls())
mcmclog <- read.table("./results_EXTENDED/SALMA_smoothed/genus_level/4-Tropical_Extratropical/BDCS/Tropical/combined_logs/combined_20mcmc.log",
header = TRUE, sep = "\t")
time_bins <- read.table("./data_2023/time_bins/BDS_fixShifts.txt")
colnames(time_bins) <- "max_ma"
# Burn-in
burnin <- 10
mcmclog <- mcmclog[-c(1:burnin),]
# Origination rates table
ori <- subset(mcmclog, select = grepl("lambda_", names(mcmclog)))
# Extinction rates table
ext <- subset(mcmclog, select = grepl("mu_", names(mcmclog)))
# Extend time_bins
time_bins <- time_bins %>%
map_df(rev) %>%
add_column(mean_lambda = sapply(X = colnames(ori), FUN = function(x){mean(ori[, c(x)], na.rm = TRUE)}),
min_HPD_lambda = sapply(X = colnames(ori), FUN = function(x){return(as.numeric(quantile(ori[, c(x)], probs = c(0.025))))}),
max_HPD_lambda = sapply(X = colnames(ori), FUN = function(x){return(as.numeric(quantile(ori[, c(x)], probs = c(0.975))))}),
mean_mu = sapply(X = colnames(ext), FUN = function(x){mean(ext[, c(x)], na.rm = TRUE)}),
min_HPD_mu = sapply(X = colnames(ext), FUN = function(x){return(as.numeric(quantile(ext[, c(x)], probs = c(0.025))))}),
max_HPD_mu = sapply(X = colnames(ext), FUN = function(x){return(as.numeric(quantile(ext[, c(x)], probs = c(0.975))))}))
time_bins[nrow(time_bins)+1, ] <- c(15, time_bins[nrow(time_bins), colnames(time_bins)[2:length(colnames(time_bins))]])
View(time_bins)
source("~/Documents/GitHub/CorsaiR/R/1-extract_param_from_PyRate_outputs.R")
df <- extract_rtt("./results_EXTENDED/SALMA_smoothed/genus_level/4-Tropical_Extratropical/BDCS/Tropical/combined_logs/combined_20_marginal_rates_RTT.r", ana="BDS")
View(df)
0.1750-0.208
df1 <- df %>% add_column(netHPD_min = sp_minHPD - ex_minHPD)
df1 <- df %>% add_column(netHPD_min = (df$sp_minHPD - df$ex_maxHPD))
View(df1)
install.packages("divvy")
install.packages("revosim")
library(divvy)
?divvy
