class(world)
data("world")
sf_use_s2(FALSE)
world %>%
st_union() %>%
ggplot() +
geom_sf()
world %>%
st_union() %>%
ggplot() +
geom_sf() +
coord_map(projection = "robinson")
library(mapproj)
?coord_map
world %>%
st_union() %>%
ggplot() +
geom_sf() +
coord_map(projection = "robinson")
world %>%
st_union() %>%
ggplot() +
geom_sf() +
coord_map(projection = "mollewide")
world %>%
st_union() %>%
ggplot() +
geom_sf() +
coord_map(projection = "mollweide")
?coord_sf()
world %>%
st_union() %>%
ggplot() +
geom_polygon() +
coord_map(projection = "mollweide")
world %>%
st_union() %>%
ggplot() +
geom_sf() +
coord_sf(crs = "+proj=moll +ellps=WGS84")
world %>%
st_union() %>%
ggplot() +
geom_sf() +
coord_sf(crs = "+proj=rob +ellps=WGS84")
world %>%
st_union() %>%
ggplot() +
geom_sf() +
coord_sf(crs = "+proj=moll +ellps=WGS84")
world %>%
st_union() %>%
ggplot() +
geom_sf(fill = "bisque2") +
coord_sf(crs = "+proj=moll +ellps=WGS84") +
theme(panel.background = element_rect(fill='transparent'), #transparent panel bg
plot.background = element_rect(fill='transparent', color=NA), #transparent plot bg
panel.grid.major = element_blank(), #remove major gridlines
panel.grid.minor = element_blank(), #remove minor gridlines
panel.border = element_blank())
ggsave("./figures/palaeotemp.png", plot = p, width = 15, height = 15)
ggsave("./figures/world_map.png", plot = p, width = 15, height = 15)
## Temp ------------------------------------------------------------------------
library(tidyverse)
library(deeptime)
Temp <- read.table("./data_2023/MBD/raw_environment_correlates/palaeotemperature/merged_veizer_westerhold_Ts.txt",
sep = "\t",
header = TRUE)
p <- Temp %>%
filter(Age < 60 & Age > 20) %>%
ggplot(aes(x = Age, y = Temperature)) +
geom_line(linewidth = 1, colour = "bisque2") +
scale_x_reverse() +
labs(x = "Time (Ma)",
y = "Global Average Temperature (°C)") +
geom_vline(xintercept = 33.9, linetype="dashed", color = "red", linewidth = 0.8) +
annotate(geom = "text", x = 32.5, y = 35, label = "EOT", size = 10, colour = "red") +
coord_geo(dat = "epochs", size = 6, color = "grey85", abbr = FALSE, center_end_labels = TRUE) +
theme(axis.title = element_text(size = 18, colour = "grey85"),
axis.line = element_line(colour = "grey85"),
axis.ticks = element_line(colour = "grey85"),
axis.text = element_text(size = 18, colour = "grey85"),
panel.background = element_rect(fill='transparent'), #transparent panel bg
plot.background = element_rect(fill='transparent', color=NA), #transparent plot bg
panel.grid.major = element_blank(), #remove major gridlines
panel.grid.minor = element_blank(), #remove minor gridlines
panel.border = element_blank())
ggsave("./figures/palaeotemp.png", plot = p, width = 15, height = 7.5)
## World -----------------------------------------------------------------------
library(sf)
library(spData)
sf_use_s2(FALSE)
data("world")
p1 <- world %>%
st_union() %>%
ggplot() +
geom_sf(fill = "bisque2") +
coord_sf(crs = "+proj=moll +ellps=WGS84") +
theme(panel.background = element_rect(fill='transparent'), #transparent panel bg
plot.background = element_rect(fill='transparent', color=NA), #transparent plot bg
panel.grid.major = element_blank(), #remove major gridlines
panel.grid.minor = element_blank(), #remove minor gridlines
panel.border = element_blank())
ggsave("./figures/world_map.png", plot = p1, width = 15, height = 15)
ggsave("./figures/world_map.png", plot = p1, width = 25, height = 25)
ggsave("./figures/world_map.png", plot = p1, width = 40, height = 40)
p1 <- world %>%
st_union() %>%
ggplot() +
geom_sf(fill = "bisque3") +
coord_sf(crs = "+proj=moll +ellps=WGS84") +
theme(panel.background = element_rect(fill='transparent'), #transparent panel bg
plot.background = element_rect(fill='transparent', color=NA), #transparent plot bg
panel.grid.major = element_blank(), #remove major gridlines
panel.grid.minor = element_blank(), #remove minor gridlines
panel.border = element_blank())
ggsave("./figures/world_map.png", plot = p1, width = 40, height = 40)
p1 <- world %>%
st_union() %>%
ggplot() +
geom_sf(fill = "bisque4") +
coord_sf(crs = "+proj=moll +ellps=WGS84") +
theme(panel.background = element_rect(fill='transparent'), #transparent panel bg
plot.background = element_rect(fill='transparent', color=NA), #transparent plot bg
panel.grid.major = element_blank(), #remove major gridlines
panel.grid.minor = element_blank(), #remove minor gridlines
panel.border = element_blank())
ggsave("./figures/world_map.png", plot = p1, width = 40, height = 40)
ggsave("./figures/world_map.png", plot = p1, width = 10, height = 10)
ggsave("./figures/world_map.png", plot = p1, width = 35, height = 35)
ggsave("./figures/world_map.png", plot = p1, width = 35, height = 35)
ggsave("./figures/palaeotemp.png", plot = p, width = 35, height = 35)
ggsave("./figures/palaeotemp.png", plot = p, width = 36, height = 18)
ggsave("./figures/palaeotemp.png", plot = p, width = 24, height = 12)
ggsave("./figures/palaeotemp.png", plot = p, width = 30, height = 15)
p <- Temp %>%
filter(Age < 60 & Age > 20) %>%
ggplot(aes(x = Age, y = Temperature)) +
geom_line(linewidth = 1, colour = "bisque2") +
scale_x_reverse() +
labs(x = "Time (Ma)",
y = "Global Average Temperature (°C)") +
geom_vline(xintercept = 33.9, linetype="dashed", color = "red", linewidth = 0.8) +
annotate(geom = "text", x = 32.5, y = 35, label = "EOT", size = 17, colour = "red") +
coord_geo(dat = "epochs", size = 6, color = "grey85", abbr = FALSE, center_end_labels = TRUE) +
theme(axis.title = element_text(size = 24, colour = "grey85"),
axis.line = element_line(colour = "grey85"),
axis.ticks = element_line(colour = "grey85"),
axis.text = element_text(size = 24, colour = "grey85"),
panel.background = element_rect(fill='transparent'), #transparent panel bg
plot.background = element_rect(fill='transparent', color=NA), #transparent plot bg
panel.grid.major = element_blank(), #remove major gridlines
panel.grid.minor = element_blank(), #remove minor gridlines
panel.border = element_blank())
ggsave("./figures/palaeotemp.png", plot = p, width = 30, height = 15)
p <- Temp %>%
filter(Age < 60 & Age > 20) %>%
ggplot(aes(x = Age, y = Temperature)) +
geom_line(linewidth = 1, colour = "bisque2") +
scale_x_reverse() +
labs(x = "Time (Ma)",
y = "Global Average Temperature (°C)") +
geom_vline(xintercept = 33.9, linetype="dashed", color = "red", linewidth = 0.8) +
annotate(geom = "text", x = 32.5, y = 35, label = "EOT", size = 17, colour = "red") +
coord_geo(dat = "epochs", size = 8, color = "grey85", abbr = FALSE, center_end_labels = TRUE) +
theme(axis.title = element_text(size = 24, colour = "grey85"),
axis.line = element_line(colour = "grey85"),
axis.ticks = element_line(colour = "grey85"),
axis.text = element_text(size = 24, colour = "grey85"),
panel.background = element_rect(fill='transparent'), #transparent panel bg
plot.background = element_rect(fill='transparent', color=NA), #transparent plot bg
panel.grid.major = element_blank(), #remove major gridlines
panel.grid.minor = element_blank(), #remove minor gridlines
panel.border = element_blank())
ggsave("./figures/palaeotemp.png", plot = p, width = 30, height = 15)
View(deeptime::epochs)
library(deeptime)
deeptime::coord_geo()
?coord_geo
## Temp ------------------------------------------------------------------------
library(tidyverse)
Temp <- read.table("./data_2023/MBD/raw_environment_correlates/palaeotemperature/merged_veizer_westerhold_Ts.txt",
sep = "\t",
header = TRUE)
p <- Temp %>%
filter(Age < 60 & Age > 20) %>%
ggplot(aes(x = Age, y = Temperature)) +
geom_line(linewidth = 1, colour = "bisque2") +
scale_x_reverse() +
labs(x = "Time (Ma)",
y = "Global Average Temperature (°C)") +
geom_vline(xintercept = 33.9, linetype="dashed", color = "red", linewidth = 0.8) +
annotate(geom = "text", x = 32.5, y = 35, label = "EOT", size = 17, colour = "red") +
coord_geo(dat = "epochs", size = 15, height = unit(4, "line"), color = "grey85", abbr = FALSE, center_end_labels = TRUE) +
theme(axis.title = element_text(size = 24, colour = "grey85"),
axis.line = element_line(colour = "grey85"),
axis.ticks = element_line(colour = "grey85"),
axis.text = element_text(size = 24, colour = "grey85"),
panel.background = element_rect(fill='transparent'), #transparent panel bg
plot.background = element_rect(fill='transparent', color=NA), #transparent plot bg
panel.grid.major = element_blank(), #remove major gridlines
panel.grid.minor = element_blank(), #remove minor gridlines
panel.border = element_blank())
ggsave("./figures/palaeotemp.png", plot = p, width = 30, height = 15)
p <- Temp %>%
filter(Age < 60 & Age > 20) %>%
ggplot(aes(x = Age, y = Temperature)) +
geom_line(linewidth = 1, colour = "bisque2") +
scale_x_reverse() +
labs(x = "Time (Ma)",
y = "Global Average Temperature (°C)") +
geom_vline(xintercept = 33.9, linetype="dashed", color = "red", linewidth = 0.8) +
annotate(geom = "text", x = 32.5, y = 35, label = "EOT", size = 17, colour = "red") +
coord_geo(dat = "epochs", size = 14, height = unit(4, "line"), color = "grey85", abbr = FALSE, center_end_labels = TRUE) +
theme(axis.title = element_text(size = 24, colour = "grey85"),
axis.line = element_line(colour = "grey85"),
axis.ticks = element_line(colour = "grey85"),
axis.text = element_text(size = 24, colour = "grey85"),
panel.background = element_rect(fill='transparent'), #transparent   panel bg
plot.background = element_rect(fill='transparent', color=NA), #transparent plot bg
panel.grid.major = element_blank(), #remove major gridlines
panel.grid.minor = element_blank(), #remove minor gridlines
panel.border = element_blank())
ggsave("./figures/palaeotemp.png", plot = p, width = 30, height = 15)
# Generate random data somewhere between the Eocene and the Oligocene
data <- data.frame(time = runif(n = 100, min = 60, max = 20),
y = runif(n = 100, min = 0, max = 10))
View(data)
# Generate random data somewhere between the Eocene and the Oligocene
data <- data.frame(time = runif(n = 100, min = 20, max = 60),
y = runif(n = 100, min = 0, max = 10))
p1 <- ggplot(data = data, aes(x = time, y = y)) +
geom_point() +
scale_x_reverse() +
coord_geo(dat = "epochs",
center_end_labels = TRUE,
abbrv = FALSE,
size = "auto")
p1
p
epochs <- deeptime::epochs %>%
filter(max_age <= 66)
p <- Temp %>%
filter(Age < 60 & Age > 20) %>%
ggplot(aes(x = Age, y = Temperature)) +
geom_line(linewidth = 1, colour = "bisque2") +
scale_x_reverse() +
labs(x = "Time (Ma)",
y = "Global Average Temperature (°C)") +
geom_vline(xintercept = 33.9, linetype="dashed", color = "red", linewidth = 0.8) +
annotate(geom = "text", x = 32.5, y = 35, label = "EOT", size = 17, colour = "red") +
coord_geo(dat = epochs, size = 14, height = unit(4, "line"), color = "grey85", abbr = FALSE, center_end_labels = TRUE) +
theme(axis.title = element_text(size = 24, colour = "grey85"),
axis.line = element_line(colour = "grey85"),
axis.ticks = element_line(colour = "grey85"),
axis.text = element_text(size = 24, colour = "grey85"),
panel.background = element_rect(fill='transparent'), #transparent   panel bg
plot.background = element_rect(fill='transparent', color=NA), #transparent plot bg
panel.grid.major = element_blank(), #remove major gridlines
panel.grid.minor = element_blank(), #remove minor gridlines
panel.border = element_blank())
ggsave("./figures/palaeotemp.png", plot = p, width = 30, height = 15)
library(sf)
library(spData)
library(ggplot2)
library(tidyverse)
## Load data -------------------------------------------------------------------
# Occurrence data
occdf <- readRDS("./data_2023/SPECIES_LISTS/5-Fully_cleaned_EOT_SA_Mammals_SALMA_kept_Tropics_Diet.RDS")
# New world map
nw <- st_read("./data_2023/New_World_map_ecoregions/New_World_18_regions_DCsplit.shp")
# switch off the use of s2, otherwise st_union does not work
sf_use_s2(FALSE)
## Load data -------------------------------------------------------------------
# Occurrence data
occdf <- readRDS("./data_2023/SPECIES_LISTS/5-Fully_cleaned_EOT_SA_Mammals_SALMA_kept_Tropics_Diet.RDS")
# New world map
nw <- st_read("./data_2023/New_World_map_ecoregions/New_World_18_regions_DCsplit.shp")
# switch off the use of s2, otherwise st_union does not work
sf_use_s2(FALSE)
## Process map data and pot ----------------------------------------------------
p <- nw %>%
# Extract South America
filter(ECO_NAM %in% c("North_Mesoamerica", "Nearctic", "South_Mesoamerica", "Carribean") == F) %>%
# Merge extracted polygons
st_union() %>%
# Plot
ggplot() +
geom_sf(colour = "grey", fill = "grey", lwd = 0.01) +
annotate(geom = "rect", xmin = -67, xmax = -65, ymin = -27, ymax = -25, fill = "grey") +
annotate(geom = "rect", xmin = -75, xmax = -70, ymin = -15, ymax = -10, fill = "grey") +
annotate(geom = "rect", xmin = -79.6, xmax = -70, ymin = -6.8, ymax = -2.5, fill = "grey") +
annotate(geom = "rect", xmin = -69, xmax = -70, ymin = -18, ymax = -13, fill = "grey") +
geom_point(data = occdf, aes(x = lng, y = lat), colour = "black", size = 2) +
theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
panel.background = element_rect(fill = "transparent"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.background = element_rect(fill='transparent', color=NA), #transparent plot bg
panel.border = element_blank(),
legend.position="none")
p
## Save ------------------------------------------------------------------------
ggsave("../ECTE_2024/map_all.png", plot = p, height = 8.5, width = 6)
View(epochs)
spl <- readRDS("./data_2023/SPECIES_LISTS/3-Fully_cleaned_Cnz_SA_mammals_SALMA_kept_Tropics_Diet.RDS")
rm(list = ls())
spl <- readRDS("./data_2023/SPECIES_LISTS/3-Fully_cleaned_Cnz_SA_mammals_SALMA_kept_Tropics_Diet.RDS")
hamsters <- spl %>% filter(family == "Cricetidae")
View(hamsters)
max(hamsters$max_ma)
View(spl)
dir <- "./results/SALMA_smoothed/genus_level/5-Ecomorphotype/"
ecm <- "herbivore"
ltt_tbl <- extract_ltt(paste0(dir, "/", ecm, "/LTT/per_replicate/"))
## Source helper functions from CorsaiR and additional facilities --------------
source("~/Documents/GitHub/CorsaiR/R/1-extract_param_from_PyRate_outputs.R")
source("~/Documents/GitHub/CorsaiR/R/2-plotting_facilities.R")
library("readxl")
library("ggpubr")
ltt_tbl <- extract_ltt(paste0(dir, "/", ecm, "/LTT/per_replicate/"))
View(ltt_tbl)
plt_dataframe <- data.frame(Age = NA,
Diversity = NA,
min_Diversity = NA,
max_Diversity = NA)
View(plt_dataframe)
plt_dataframe <- data.frame(Age = NULL,
Diversity = NULL,
min_Diversity = NULL,
max_Diversity = NULL)
View(plt_dataframe)
plt_dataframe <- data.frame(Age = NA,
Diversity = NA,
min_Diversity = NA,
max_Diversity = NA)
plt_dataframe <- data.frame(Age = NA,
Diversity = NA,
min_Diversity = NA,
max_Diversity = NA,
Diet = NA)
for(ecm in c("carnivore", "herbivore", "omnivore", "insectivore")){
ltt_tbl <- extract_ltt(paste0(dir, "/", ecm, "/LTT/per_replicate/"))
ltt_tbl$Diet <- rep(ecm, nrow(ltt_tbl))
plt_dataframe <- cbind.data.frame(plt_dataframe, ltt_tbl)
}
plt_dataframe <- data.frame(Age = NA,
Diversity = NA,
min_Diversity = NA,
max_Diversity = NA,
Diet = NA)
for(ecm in c("carnivore", "herbivore", "omnivore", "insectivore")){
ltt_tbl <- extract_ltt(paste0(dir, "/", ecm, "/LTT/per_replicate/"))
ltt_tbl$Diet <- rep(ecm, nrow(ltt_tbl))
plt_dataframe <- rbind.data.frame(plt_dataframe, ltt_tbl)
}
View(plt_dataframe)
plt_dataframe <- plt_dataframe[-c(1),]
ggplot(data = plt_dataframe, aes(x = Age, y = Diversity, color = Diet)) +
scale_x_reverse(breaks = x_breaks, expand = c(0, 0)) +
scale_y_continuous(breaks = y_breaks,
limits = y_limits,
expand = c(0, 0)) +
geom_ribbon(aes(x = Age, ymin = min_Diversity, ymax = max_Diversity),
#              fill = "#a1d99b",
alpha = 0.8) +
geom_line(linewidth = 1)
ggplot(data = plt_dataframe, aes(x = Age, y = Diversity, color = Diet)) +
scale_x_reverse(breaks = seq(25, 50, 5), expand = c(0, 0)) +
scale_y_continuous(breaks = seq(0,(round(max(plt_dataframe$Diversity), -1) + 10),20),
limits = c(0,(round(max(plt_dataframe$Diversity), -1) + 20)),
expand = c(0, 0)) +
geom_ribbon(aes(x = Age, ymin = min_Diversity, ymax = max_Diversity),
#              fill = "#a1d99b",
alpha = 0.8) +
geom_line(linewidth = 1)
ggplot(data = plt_dataframe, aes(x = Age, y = Diversity, colour = Diet)) +
scale_x_reverse(breaks = seq(25, 50, 5), expand = c(0, 0)) +
scale_y_continuous(breaks = seq(0,(round(max(plt_dataframe$Diversity), -1) + 10),20),
limits = c(0,(round(max(plt_dataframe$Diversity), -1) + 20)),
expand = c(0, 0)) +
geom_ribbon(aes(x = Age, ymin = min_Diversity, ymax = max_Diversity),
fill = "#a1d99b",
alpha = 0.8) +
geom_line(linewidth = 1, colour = "#006d2c")
ggplot(data = plt_dataframe, aes(x = Age, y = Diversity, colour = Diet)) +
scale_x_reverse(breaks = seq(25, 50, 5), expand = c(0, 0)) +
scale_y_continuous(breaks = seq(0,(round(max(plt_dataframe$Diversity), -1) + 10),20),
limits = c(0,(round(max(plt_dataframe$Diversity), -1) + 20)),
expand = c(0, 0)) +
geom_ribbon(aes(x = Age, ymin = min_Diversity, ymax = max_Diversity),
fill = "#a1d99b",
alpha = 0.8) +
geom_line(linewidth = 1)
i <- 0
j <- 0
pth <- "./results/SALMA_smoothed/species_level/1-Full/",
pth <- "./results/SALMA_smoothed/species_level/1-Full/"
# avoid repeating too many times x label
x_lab <- NULL
x.axis <- FALSE
xlim <- c(52, 24)
display_gts <- FALSE
ltt_tbl <- extract_ltt(paste0(pth, "LTT/per_replicate/"))
ltt_tbl <- ltt_tbl %>% filter(Age > 24 & Age < 52)
# plotting adjustments
ltt_tbl$Age[1] <- 24
ltt_tbl$Age[nrow(ltt_tbl)] <- 52
# plot
ltt.plot <- ltt_plot(ltt_tbl,
stage_x_breaks = FALSE,
manual_x_breaks = seq(25, 50, 5),
axes.labelsize=15,
ticks.labelsize = 12,
x_lab = x_lab,
y_breaks = seq(0,(round(max(ltt_tbl$Diversity), -1) + 10),20),
y_limits = c(0,(round(max(ltt_tbl$Diversity), -1) + 20)),
display_gts = display_gts,
xlim = xlim,
avg_col = "#006d2c",
ribbon_col = "#74c476",
plot.border = FALSE,
x.axis = x.axis,
several_gts = TRUE,
geoscale2 = gsc2,
geoscale_height = unit(1, "line"),
geoscale_labelsize = 4,
abbr = list(TRUE, FALSE)) +
annotate(geom = "rect", xmin = 37.71, xmax = 47.8, colour = "grey95", ymin = -Inf, ymax = Inf, alpha = 0.1, linewidth = 0) +
annotate(geom = "rect", xmin = 27.8, xmax = 33.9, colour = "grey95", ymin = -Inf, ymax = Inf, alpha = 0.1, linewidth = 0) +
geom_vline(xintercept = 33.9, linetype="dashed", color = "red", linewidth = 0.8)
ltt.plot
library("hash")
line_col_dict <- hash("carnivore" = "#99000d",
"herbivore" = "#016c59",
"omnivore" = "#543005",
"insectivore" = "#4a1486")
rib_col_dict <- hash("carnivore" = "#fb6a4a",
"herbivore" = "#67a9cf",
"omnivore" = "#dfc27d",
"insectivore" = "#f768a1")
library(tidyverse)
line_col_dict$carnivore
line_col_dict["carnivore"]
values(line_col_dict["carnivore"])
as.numeric(values(line_col_dict["carnivore"]))
as.character(values(line_col_dict["carnivore"]))
rm(list = ls())
## Source helper functions from CorsaiR and additional facilities --------------
source("~/Documents/GitHub/CorsaiR/R/1-extract_param_from_PyRate_outputs.R")
source("~/Documents/GitHub/CorsaiR/R/2-plotting_facilities.R")
library("readxl")
library("hash")
library("tidyverse")
library("ggpubr")
## Generate plotting dataframe -------------------------------------------------
dir <- "./results/SALMA_smoothed/genus_level/5-Ecomorphotype/"
plt_dataframe <- data.frame(Age = NA,
Diversity = NA,
min_Diversity = NA,
max_Diversity = NA,
Diet = NA,
line_col = NA,
rib_col = NA)
line_col_dict <- hash("carnivore" = "#99000d",
"herbivore" = "#016c59",
"omnivore" = "#543005",
"insectivore" = "#4a1486")
rib_col_dict <- hash("carnivore" = "#fb6a4a",
"herbivore" = "#67a9cf",
"omnivore" = "#dfc27d",
"insectivore" = "#f768a1")
for(ecm in c("carnivore", "herbivore", "omnivore", "insectivore")){
ltt_tbl <- extract_ltt(paste0(dir, "/", ecm, "/LTT/per_replicate/"))
ltt_tbl <- ltt_tbl %>% add_column(Diet = rep(ecm, nrow(ltt_tbl)),
line_col = rep(as.character(values(line_col_dict[ecm]))),
rib_col = rep(as.character(values(rib_col_dict[ecm]))))
plt_dataframe <- rbind.data.frame(plt_dataframe, ltt_tbl)
}
View(plt_dataframe)
plt_dataframe <- plt_dataframe[-c(1),] #remove initialising row
ggplot(data = plt_dataframe, aes(x = Age, y = Diversity, colour = Diet)) +
scale_x_reverse(breaks = seq(25, 50, 5), expand = c(0, 0)) +
scale_y_continuous(breaks = seq(0,(round(max(plt_dataframe$Diversity), -1) + 10),20),
limits = c(0,(round(max(plt_dataframe$Diversity), -1) + 20)),
expand = c(0, 0)) +
geom_ribbon(aes(x = Age, ymin = min_Diversity, ymax = max_Diversity),
fill = rib_col,
alpha = 0.8) +
geom_line(linewidth = 1, color = line_col)
ggplot(data = plt_dataframe, aes(x = Age, y = Diversity, colour = Diet)) +
scale_x_reverse(breaks = seq(25, 50, 5), expand = c(0, 0)) +
scale_y_continuous(breaks = seq(0,(round(max(plt_dataframe$Diversity), -1) + 10),20),
limits = c(0,(round(max(plt_dataframe$Diversity), -1) + 20)),
expand = c(0, 0)) +
geom_ribbon(aes(x = Age, ymin = min_Diversity, ymax = max_Diversity),
fill = plt_dataframe$rib_col,
alpha = 0.8) +
geom_line(linewidth = 1, color = plt_dataframe$line_col)
ggplot(data = plt_dataframe, aes(x = Age, y = Diversity, colour = Diet)) +
scale_x_reverse(breaks = seq(25, 50, 5), expand = c(0, 0)) +
scale_y_continuous(breaks = seq(0,(round(max(plt_dataframe$Diversity), -1) + 10),20),
limits = c(0,(round(max(plt_dataframe$Diversity), -1) + 20)),
expand = c(0, 0)) +
geom_ribbon(aes(x = Age, ymin = min_Diversity, ymax = max_Diversity, fill = rib_col),
alpha = 0.8) +
geom_line(aes(x = Age, y = Diversity, color = line_col), linewidth = 1)
