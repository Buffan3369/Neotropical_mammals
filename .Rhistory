occdf$diet[which(occdf$genus == "cf. Aotus")] <- "omnivore"
occdf$diet[which(occdf$genus == "Callicebus")] <- "frugivore"
#-------------------------------------------------------------------------------
##################### Save the whole occurrence dataframe ######################
#-------------------------------------------------------------------------------
# All Cenozoic
saveRDS(occdf, "./data_2023/SPECIES_LISTS/4-Fully_cleaned_Cnz_SA_mammals_SALMA_kept_Tropics_Diet.RDS")
# EOT
all_cleaned_EOT <- occdf %>% filter(epoch %in% c("Eocene", "Oligocene"))
#save
saveRDS(all_cleaned_EOT, "./data_2023/SPECIES_LISTS/5-Fully_cleaned_EOT_SA_Mammals_SALMA_kept_Tropics_Diet.RDS")
################################################################################
# Name: 3-SALMA_smoothing.R
# Author: Lucas Buffan
# Date: 2023-12-13
# Aim: 'Smooth' SALMAs => match boundaries of the occurrences
#   associated to a SALMA with those of their corresponding sub-epoch
################################################################################
library(readxl)
library(tidyverse)
library(palaeoverse)
## Load data -------------------------------------------------------------------
SubEpochs <- read_xlsx("./data_2023/time_bins/EarlyMidLate_epochs.xlsx")
SubEpochs$bin <- 1:nrow(SubEpochs) #add 'bin' columns for `bin_time`
SALMA_EOT <- read_xlsx("./data_2023/time_bins/SALMA_EOT.xlsx")
species_list <- readRDS("./data_2023/SPECIES_LISTS/5-Fully_cleaned_EOT_SA_Mammals_SALMA_kept_Tropics_Diet.RDS")
## Bin SALMAs with the Sub-Epochs they most overlap with -----------------------
binning <- palaeoverse::bin_time(occdf = data.frame(max_ma = SALMA_EOT$max_ma,
min_ma = SALMA_EOT$min_ma),
bins = SubEpochs,
method = "majority")
SALMA_EOT_Sub_epoch <- sapply(X = binning$bin_assignment,
FUN = function(x){
return(SubEpochs$interval_name[which(SubEpochs$bin == x)])
})
SALMA_EOT <- SALMA_EOT %>% add_column(Sub_Epoch = SALMA_EOT_Sub_epoch,
.after = "epoch")
## Subset occ associated to a SALMA --------------------------------------------
#(Re)create Early/Late stage column
split_stage <- function(stage, early=TRUE){
hyphen_split <- strsplit(stage, split = "-")[[1]]
if(early == TRUE){
return(hyphen_split[1])
}
else{
if(length(hyphen_split) > 1){
return(hyphen_split[2])
}
else{
return(NA)
}
}
}
species_list <- species_list %>% add_column(Early_stage = sapply(X = species_list$stage,
FUN = split_stage),
Late_stage = sapply(X = species_list$stage,
FUN = split_stage,
early = FALSE),
.after = "stage")
#Split SALMA-associated occurrences
spl_EOT <- species_list %>% filter(Early_stage %in% SALMA_EOT$interval_name)
cat("A total of", nrow(spl_EOT), "occurrences (representing",
round( (nrow(spl_EOT) / nrow(species_list)), digits = 2 )*100,
"% of the total) are associated to a SALMA.\n")
get_ref <- function(stage, Which=c("min", "max")){
#get the ref age
hyp_split <- strsplit(stage, split = "-")[[1]]
if(length(hyp_split) > 1){
corr_early <- SALMA_EOT$Sub_Epoch[which(SALMA_EOT$interval_name == hyp_split[1])]
corr_late <- SALMA_EOT$Sub_Epoch[which(SALMA_EOT$interval_name == hyp_split[2])]
ref_max <- SubEpochs$max_ma[which(SubEpochs$interval_name == corr_early)]
ref_min <- SubEpochs$min_ma[which(SubEpochs$interval_name == corr_late)]
}
else{
corr <- SALMA_EOT$Sub_Epoch[which(SALMA_EOT$interval_name == stage)]
ref_max <- SubEpochs$max_ma[which(SubEpochs$interval_name == corr)]
ref_min <- SubEpochs$min_ma[which(SubEpochs$interval_name == corr)]
}
#return
if(Which == "min"){
return(ref_min)
}
else{
return(ref_max)
}
}
spl_EOT$min_ma <- sapply(X = spl_EOT$stage, FUN = get_ref, Which = "min")
spl_EOT$max_ma <- sapply(X = spl_EOT$stage, FUN = get_ref, Which = "max")
## Merge the two datasets (SALMA/not_SALMA) and save ---------------------------
spl_not_EOT <- species_list %>% filter(Early_stage %in% SALMA_EOT$interval_name == FALSE)
spl <- rbind.data.frame(spl_not_EOT, spl_EOT)
spl <- data.frame(spl)
spl <- spl %>%
select(-c(Early_stage, Late_stage)) %>%
arrange(order, family, genus, accepted_name, cc)
library(readxl)
library(tidyverse)
library(palaeoverse)
## Load data -------------------------------------------------------------------
SubEpochs <- read_xlsx("./data_2023/time_bins/EarlyMidLate_epochs.xlsx")
SubEpochs$bin <- 1:nrow(SubEpochs) #add 'bin' columns for `bin_time`
SALMA_EOT <- read_xlsx("./data_2023/time_bins/SALMA_EOT.xlsx")
species_list <- readRDS("./data_2023/SPECIES_LISTS/5-Fully_cleaned_EOT_SA_Mammals_SALMA_kept_Tropics_Diet.RDS")
## Bin SALMAs with the Sub-Epochs they most overlap with -----------------------
binning <- palaeoverse::bin_time(occdf = data.frame(max_ma = SALMA_EOT$max_ma,
min_ma = SALMA_EOT$min_ma),
bins = SubEpochs,
method = "majority")
SALMA_EOT_Sub_epoch <- sapply(X = binning$bin_assignment,
FUN = function(x){
return(SubEpochs$interval_name[which(SubEpochs$bin == x)])
})
SALMA_EOT <- SALMA_EOT %>% add_column(Sub_Epoch = SALMA_EOT_Sub_epoch,
.after = "epoch")
## Subset occ associated to a SALMA --------------------------------------------
#(Re)create Early/Late stage column
split_stage <- function(stage, early=TRUE){
hyphen_split <- strsplit(stage, split = "-")[[1]]
if(early == TRUE){
return(hyphen_split[1])
}
else{
if(length(hyphen_split) > 1){
return(hyphen_split[2])
}
else{
return(NA)
}
}
}
species_list <- species_list %>% add_column(Early_stage = sapply(X = species_list$stage,
FUN = split_stage),
Late_stage = sapply(X = species_list$stage,
FUN = split_stage,
early = FALSE),
.after = "stage")
#Split SALMA-associated occurrences
spl_EOT <- species_list %>% filter(Early_stage %in% SALMA_EOT$interval_name)
cat("A total of", nrow(spl_EOT), "occurrences (representing",
round( (nrow(spl_EOT) / nrow(species_list)), digits = 2 )*100,
"% of the total) are associated to a SALMA.\n")
get_ref <- function(stage, Which=c("min", "max")){
#get the ref age
hyp_split <- strsplit(stage, split = "-")[[1]]
if(length(hyp_split) > 1){
corr_early <- SALMA_EOT$Sub_Epoch[which(SALMA_EOT$interval_name == hyp_split[1])]
corr_late <- SALMA_EOT$Sub_Epoch[which(SALMA_EOT$interval_name == hyp_split[2])]
ref_max <- SubEpochs$max_ma[which(SubEpochs$interval_name == corr_early)]
ref_min <- SubEpochs$min_ma[which(SubEpochs$interval_name == corr_late)]
}
else{
corr <- SALMA_EOT$Sub_Epoch[which(SALMA_EOT$interval_name == stage)]
ref_max <- SubEpochs$max_ma[which(SubEpochs$interval_name == corr)]
ref_min <- SubEpochs$min_ma[which(SubEpochs$interval_name == corr)]
}
#return
if(Which == "min"){
return(ref_min)
}
else{
return(ref_max)
}
}
spl_EOT$min_ma <- sapply(X = spl_EOT$stage, FUN = get_ref, Which = "min")
spl_EOT$max_ma <- sapply(X = spl_EOT$stage, FUN = get_ref, Which = "max")
## Merge the two datasets (SALMA/not_SALMA) and save ---------------------------
spl_not_EOT <- species_list %>% filter(Early_stage %in% SALMA_EOT$interval_name == FALSE)
spl <- rbind.data.frame(spl_not_EOT, spl_EOT)
spl <- data.frame(spl)
spl <- spl %>%
select(-c(Early_stage, Late_stage)) %>%
arrange(order, family, genus, accepted_name, cc)
spl$min_ma <- as.numeric(spl$min_ma) #for some reason, the "min_ma" column turned into a list...
spl$min_ma[which(spl$genus == "tegotherium")] <- 47.8 #unbinned otherwise
saveRDS(spl, "./data_2023/SPECIES_LISTS/6-Fully_cleaned_EOT_SA_Mammals_SALMA_smoothed_Tropics_Diet.RDS")
library(sf)
library(spData)
library(ggplot2)
library(tidyverse)
data("world")
occdf <- readRDS("./data_2023/SPECIES_LISTS/5-Fully_cleaned_EOT_SA_Mammals_SALMA_kept_Tropics_Diet.RDS")
world %>%
filter(continent == "South America") %>%
ggplot() +
geom_sf() +
geom_point(data = occdf, aes(x = lng, y = lat, colour = loc)) +
scale_color_manual(values = c("brown", "green")) +
theme(panel.background = element_blank())
rm(list = ls())
?geom_sf
install.packages("maps")
library(maps)
?maps
world %>%
filter(continent == "South America") %>%
ggplot() +
geom_sf() +
geom_point(data = occdf, aes(x = lng, y = lat, colour = loc)) +
scale_color_manual(values = c("brown", "green")) +
theme_classic()
ibrary(sf)
library(sf)
library(spData)
library(ggplot2)
library(tidyverse)
data("world")
occdf <- readRDS("./data_2023/SPECIES_LISTS/5-Fully_cleaned_EOT_SA_Mammals_SALMA_kept_Tropics_Diet.RDS")
world %>%
filter(continent == "South America") %>%
ggplot() +
geom_sf() +
geom_point(data = occdf, aes(x = lng, y = lat, colour = loc)) +
scale_color_manual(values = c("brown", "green")) +
theme_classic()
world %>%
filter(continent == "South America") %>%
ggplot() +
geom_sf() +
geom_point(data = occdf, aes(x = lng, y = lat, colour = loc)) +
scale_color_manual(values = c("brown", "green")) +
theme_classic(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank())
world %>%
filter(continent == "South America") %>%
ggplot() +
geom_sf() +
geom_point(data = occdf, aes(x = lng, y = lat, colour = loc)) +
scale_color_manual(values = c("brown", "green")) +
theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
panel.background = element_blank())
world %>%
filter(continent == "South America") %>%
ggplot() +
geom_sf() +
geom_point(data = occdf, aes(x = lng, y = lat, colour = loc)) +
scale_color_manual(values = c("brown", "green")) +
theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
panel.background = element_blank(),
legend.position="none")
world %>%
filter(continent == "South America") %>%
ggplot() +
geom_sf() +
geom_point(data = occdf, aes(x = lng, y = lat, colour = loc)) +
scale_color_manual(values = c("#d95f02", "#e6ab02")) +
theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
panel.background = element_blank(),
legend.position="none")
world %>%
filter(continent == "South America") %>%
ggplot() +
geom_sf() +
geom_point(data = occdf, aes(x = lng, y = lat, colour = loc)) +
scale_color_manual(values = c("#5ab4ac", "#8c510a")) +
theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
panel.background = element_blank(),
legend.position="none")
world %>%
filter(continent == "South America") %>%
ggplot() +
geom_sf(aes(fill = "#fde0dd")) +
geom_point(data = occdf, aes(x = lng, y = lat, colour = loc)) +
scale_color_manual(values = c("#5ab4ac", "#8c510a")) +
theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
panel.background = element_blank(),
legend.position="none")
?aes
world %>%
filter(continent == "South America") %>%
ggplot() +
geom_sf(aes(fill = "#fde0dd", alpha = 1)) +
geom_point(data = occdf, aes(x = lng, y = lat, colour = loc)) +
scale_color_manual(values = c("#5ab4ac", "#8c510a")) +
theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
panel.background = element_blank(),
legend.position="none")
world %>%
filter(continent == "South America") %>%
ggplot() +
geom_sf(aes(fill = "#fde0dd", alpha = 0.2)) +
geom_point(data = occdf, aes(x = lng, y = lat, colour = loc)) +
scale_color_manual(values = c("#5ab4ac", "#8c510a")) +
theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
panel.background = element_blank(),
legend.position="none")
length(which(occdf$loc == "T"))
1759-131
ct <- occdf %>%
group_by(genus, loc) %>%
count(genus)
View(ct)
length(which(ct$loc == 'T'))
length(which(ct$loc == 'E'))
ct <- occdf %>%
group_by(accepted_name, loc) %>%
count(accepted_name)
length(which(ct$loc == 'T'))
length(which(ct$loc == 'E'))
ct <- occdf %>%
group_by(accepted_name, diet) %>%
count(accepted_name)
length(which(ct$diet == "carnivore"))
length(which(ct$diet == "herbivore"))
length(which(ct$diet == "omnivore"))
length(which(ct$diet == "insectivore"))
ct <- occdf %>%
group_by(genus, diet) %>%
count(genus)
length(which(ct$diet == "carnivore"))
length(which(ct$diet == "herbivore"))
length(which(ct$diet == "omnivore"))
length(which(ct$diet == "insectivore"))
68+1212+270+209
length(unique(occdf$collection_no))
ct <- occdf %>%
group_by(collection_no, loc) %>%
count(loc)
View(ct)
length(unique(which(ct$loc == 'E')))
world %>%
filter(continent == "South America") %>%
ggplot() +
geom_sf(aes(fill = "#fff7f3", alpha = 0.2)) +
geom_point(data = occdf, aes(x = lng, y = lat, colour = loc)) +
scale_color_manual(values = c("#5ab4ac", "#8c510a")) +
theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
panel.background = element_blank(),
legend.position="none")
p <- world %>%
filter(continent == "South America") %>%
ggplot() +
geom_sf(aes(fill = "#fff7f3", alpha = 0.2)) +
geom_point(data = occdf, aes(x = lng, y = lat, colour = loc)) +
scale_color_manual(values = c("#5ab4ac", "#8c510a")) +
theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
panel.background = element_blank(),
legend.position="none")
ggsave("./figures/Fig_S2_occurrences_map.png", plot = p, height = 15, width = 10)
?geom_point
world %>%
filter(continent == "South America") %>%
ggplot() +
geom_sf(aes(fill = "#fff7f3", alpha = 0.2)) +
geom_point(data = occdf, aes(x = lng, y = lat, colour = loc, size = 3)) +
scale_color_manual(values = c("#5ab4ac", "#8c510a")) +
theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
panel.background = element_blank(),
legend.position="none")
world %>%
filter(continent == "South America") %>%
ggplot() +
geom_sf(aes(fill = "#fff7f3", alpha = 0.2)) +
geom_point(data = occdf, aes(x = lng, y = lat, colour = loc, size = 2)) +
scale_color_manual(values = c("#5ab4ac", "#8c510a")) +
theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
panel.background = element_blank(),
legend.position="none")
world %>%
filter(continent == "South America") %>%
ggplot() +
geom_sf(aes(fill = "#fff7f3", alpha = 0.2)) +
geom_point(data = occdf, aes(x = lng, y = lat, colour = loc, size = 1)) +
scale_color_manual(values = c("#5ab4ac", "#8c510a")) +
theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
panel.background = element_blank(),
legend.position="none")
rm(list = ls())
library(sf)
library(spData)
library(ggplot2)
library(tidyverse)
data("world")
occdf <- readRDS("./data_2023/SPECIES_LISTS/5-Fully_cleaned_EOT_SA_Mammals_SALMA_kept_Tropics_Diet.RDS")
p <- world %>%
filter(continent == "South America") %>%
ggplot() +
geom_sf(aes(fill = "#fff7f3", alpha = 0.2)) +
geom_point(data = occdf, aes(x = lng, y = lat, colour = loc, size = 1)) +
scale_color_manual(values = c("#5ab4ac", "#8c510a")) +
theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
panel.background = element_blank(),
legend.position="none")
ggsave("./figures/Fig_S2_occurrences_map.png", plot = p, height = 15, width = 10)
p <- world %>%
filter(continent == "South America") %>%
ggplot() +
geom_sf(aes(fill = "#fff7f3", alpha = 0.2)) +
geom_point(data = occdf, aes(x = lng, y = lat, colour = loc, size = 0.5)) +
scale_color_manual(values = c("#5ab4ac", "#8c510a")) +
theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
panel.background = element_blank(),
legend.position="none")
ggsave("./figures/Fig_S2_occurrences_map.png", plot = p, height = 15, width = 10)
p <- world %>%
filter(continent == "South America") %>%
ggplot() +
geom_sf(aes(fill = "#fff7f3", alpha = 0.2)) +
geom_point(data = occdf, aes(x = lng, y = lat, colour = loc, size = 0.05)) +
scale_color_manual(values = c("#5ab4ac", "#8c510a")) +
theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
panel.background = element_blank(),
legend.position="none")
ggsave("./figures/Fig_S2_occurrences_map.png", plot = p, height = 15, width = 10)
world %>%
filter(continent == "South America") %>%
ggplot() +
geom_sf(aes(fill = "#fff7f3", alpha = 0.2)) +
geom_point(data = occdf, aes(x = lng, y = lat, colour = loc), size = 2) +
scale_color_manual(values = c("#5ab4ac", "#8c510a")) +
theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
panel.background = element_blank(),
legend.position="none")
p <- world %>%
filter(continent == "South America") %>%
ggplot() +
geom_sf(aes(fill = "#fff7f3", alpha = 0.2)) +
geom_point(data = occdf, aes(x = lng, y = lat, colour = loc), size = 2) +
scale_color_manual(values = c("#5ab4ac", "#8c510a")) +
theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
panel.background = element_blank(),
legend.position="none")
ggsave("./figures/Fig_S2_occurrences_map.png", plot = p, height = 15, width = 10)
ggsave("./figures/Fig_S2_occurrences_map.png", plot = p, height = 10, width = 7.5)
