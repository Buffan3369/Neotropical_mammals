library(tidyverse)
library(deeptime)
library(ggpubr)
library(rphylopic)
library(readxl)
# Open species List
spl <- readRDS("./data_2023/SPECIES_LISTS/7-Fully_cleaned_EOT_extended_SA_Mammals_SALMA_kept_Tropics_Diet.RDS")
# Function returning estimated age boundaries of a family
Ori_ext <- function(fam, gen_fam_tbl, TsTe_tbl, time = c("Ts", "Te")){
tmp_fam <- gen_fam_tbl %>% filter(family == fam)
TsTe_tmp <- TsTe_tbl %>% filter(genus %in% tmp_fam$genus)
if(time == "Ts"){
return(max(TsTe_tmp$ts))
}
else if(time == "Te"){
return(min(TsTe_tmp$te))
}
}
# GEOSCALES
# First geoscale
gsc1 <- deeptime::epochs
gsc1 <- gsc1 %>% filter(min_age < 56)
# Set second geoscale
gsc2 <- read_xlsx("./data_2023/time_bins/EarlyMidLate_epochs.xlsx")
gsc2 <- gsc2 %>% rename(min_age = "min_ma", max_age = "max_ma", name = "interval_name")
## NOTOUNGULATA ----------------------------------------------------------------
# TsTe info
TsTe_noto <- read.table("./results_EXTENDED/SALMA_smoothed/genus_level/6-Order_level/Notoungulata/BDCS/TsTe_Notoungulata_SALMA_smoothed_genus_level.txt",
header = TRUE)
species_list_idx <- read.table("./data_2023/PyRate/EXTENDED/SALMA_smoothed/genus_level/5-Order_level/Notoungulata_EOT_gen_occ_SALMA_smoothed_TaxonList.txt",
header = TRUE)
Ts_noto <- TsTe_noto %>%
select(matches("ts"))
Te_noto <- TsTe_noto %>%
select(matches("te"))
TsTe_noto <- TsTe_noto %>%
mutate(mean_ts = rowMeans(Ts_noto),
mean_te = rowMeans(Te_noto),
genus = species_list_idx$Species) %>%
select(genus, mean_ts, mean_te) %>%
rename(ts = "mean_ts", te = "mean_te") %>%
filter(ts > 23.03)
rm(Ts_noto, Te_noto)
# Families: table with each genus and its associated family
# Monophyletic families, according to Billet et al. (2011)
monophyl <- c("Homalodotheriidae", "Leontiniidae", "Toxodontidae",
"Interatheriidae", "Mesotheriidae", "Hegetotheriidae")
noto_genera <- spl %>%
filter(order == "Notoungulata") %>%
group_by(family, genus) %>%
distinct(genus)
# 3) Families plot
noto_fam <- spl %>%
filter(order == "Notoungulata") %>%
distinct(family) %>%
filter(!is.na(family), family %in% c("Homalodontotheridae", "Perutheriidae") == FALSE) %>% # Perutheriids and Homalodontotherids are just represented by a single occ
mutate(Ts = sapply(X = family, FUN = Ori_ext, gen_fam_tbl = noto_genera, TsTe_tbl = TsTe_noto, time = "Ts"),
Te = sapply(X = family, FUN = Ori_ext, gen_fam_tbl = noto_genera, TsTe_tbl = TsTe_noto, time = "Te"),
phyl = ifelse(family %in% monophyl, "Monophyletic", "Non-monophyletic")) %>%
arrange(Ts) %>%
ggplot(aes(y = fct_inorder(family), yend = fct_inorder(family))) +
geom_segment(aes(x = Ts, xend = Te, colour = phyl), linewidth = 2) +
scale_colour_manual(values = c("black", "grey60")) +
# add silhouette
add_phylopic(x = 48.5, y = 2.5, name = "Trigonostylops", ysize = 1.5) +
annotate(geom = "text", x = 48, y = 1.2, label = "Notoungulata", size = 6) +
scale_x_reverse(breaks = seq(from = 25, to = 50, by = 5)) +
labs(x = "Time (Ma)", y = "Family", colour = NULL) +
#EOT line
geom_vline(xintercept = 33.9, linetype="dashed", color = "red", linewidth = 0.8) +
annotate(geom = "text", x = 35, y = 16.5, label = " ") +
annotate(geom = "text", x = 35, y = 0.5, label = " ") +
coord_geo(pos = list("bottom", "bottom"),
dat = list(gsc2, gsc1),
abbrv = list(T, F),
center_end_labels = TRUE,
height = unit(1.5, "line"),
size = "auto",
xlim = c(24, 53)) +
theme(axis.title.x = element_text(size = 18),
axis.title.y = element_text(size = 18),
axis.text.x = element_text(size = 15),
axis.text.y = element_text(size = 10))
ggsave("./figures/Figure_3/Noto_families.pdf", noto_fam, height = 7, width = 10)
ggsave("./figures/Figure_3/Noto_families.png", noto_fam, height = 7, width = 10, dpi = 400)
noto_fam
rm(list = ls())
library(tidyverse)
library(deeptime)
library(ggpubr)
library(rphylopic)
library(readxl)
# Open species List
spl <- readRDS("./data_2023/SPECIES_LISTS/7-Fully_cleaned_EOT_extended_SA_Mammals_SALMA_kept_Tropics_Diet.RDS")
View(spl)
occdf <- readRDS("./data_2023/SPECIES_LISTS/3-Fully_cleaned_Cnz_SA_mammals_SALMA_kept.RDS")
occdf$family[which(occdf$family == "Leontiinidae")] <- "Leontiniidae"
saveRDS(object = occdf, file = "./data_2023/SPECIES_LISTS/3-Fully_cleaned_Cnz_SA_mammals_SALMA_kept.RDS")
occdf$family[which(occdf$family == "Leontiinidae")] <- "Leontiniidae"
saveRDS(object = occdf, file = "./data_2023/SPECIES_LISTS/4-Fully_cleaned_Cnz_SA_mammals_SALMA_kept_Tropics_Diet.RDS")
occdf <- readRDS("./data_2023/SPECIES_LISTS/5-Fully_cleaned_EOT_SA_Mammals_SALMA_kept_Tropics_Diet.RDS")
occdf$family[which(occdf$family == "Leontiinidae")] <- "Leontiniidae"
saveRDS(object = occdf, file = "./data_2023/SPECIES_LISTS/5-Fully_cleaned_EOT_SA_Mammals_SALMA_kept_Tropics_Diet.RDS")
occdf <- readRDS("./data_2023/SPECIES_LISTS/6-Fully_cleaned_EOT_SA_Mammals_SALMA_smoothed_Tropics_Diet.RDS")
occdf$family[which(occdf$family == "Leontiinidae")] <- "Leontiniidae"
saveRDS(object = occdf, file = "./data_2023/SPECIES_LISTS/6-Fully_cleaned_EOT_SA_Mammals_SALMA_smoothed_Tropics_Diet.RDS")
occdf <- readRDS("./data_2023/SPECIES_LISTS/7-Fully_cleaned_EOT_extended_SA_Mammals_SALMA_kept_Tropics_Diet.RDS")
occdf$family[which(occdf$family == "Leontiinidae")] <- "Leontiniidae"
saveRDS(object = occdf, file = "./data_2023/SPECIES_LISTS/7-Fully_cleaned_EOT_extended_SA_Mammals_SALMA_kept_Tropics_Diet.RDS")
View(occdf)
occdf <- readRDS("./data_2023/SPECIES_LISTS/8-Fully_cleaned_EOT_extended_SA_Mammals_SALMA_smoothed_Tropics_Diet.RDS")
occdf$family[which(occdf$family == "Leontiinidae")] <- "Leontiniidae"
saveRDS(object = occdf, file = "./data_2023/SPECIES_LISTS/8-Fully_cleaned_EOT_extended_SA_Mammals_SALMA_smoothed_Tropics_Diet.RDS")
rm(list = ls())
################################################################################
# Name: 3-Faunal_Turnover.R
# Author: Lucas Buffan
# Contact: lucas.l.buffan@gmail.com
# Aim: Script for Ts/Te plots per family and genera for different groups (SALMA
#       smoothed)
################################################################################
library(tidyverse)
library(deeptime)
library(ggpubr)
library(rphylopic)
library(readxl)
# Open species List
spl <- readRDS("./data_2023/SPECIES_LISTS/7-Fully_cleaned_EOT_extended_SA_Mammals_SALMA_kept_Tropics_Diet.RDS")
# Function returning estimated age boundaries of a family
Ori_ext <- function(fam, gen_fam_tbl, TsTe_tbl, time = c("Ts", "Te")){
tmp_fam <- gen_fam_tbl %>% filter(family == fam)
TsTe_tmp <- TsTe_tbl %>% filter(genus %in% tmp_fam$genus)
if(time == "Ts"){
return(max(TsTe_tmp$ts))
}
else if(time == "Te"){
return(min(TsTe_tmp$te))
}
}
# GEOSCALES
# First geoscale
gsc1 <- deeptime::epochs
gsc1 <- gsc1 %>% filter(min_age < 56)
# Set second geoscale
gsc2 <- read_xlsx("./data_2023/time_bins/EarlyMidLate_epochs.xlsx")
gsc2 <- gsc2 %>% rename(min_age = "min_ma", max_age = "max_ma", name = "interval_name")
## NOTOUNGULATA ----------------------------------------------------------------
# TsTe info
TsTe_noto <- read.table("./results_EXTENDED/SALMA_smoothed/genus_level/6-Order_level/Notoungulata/BDCS/TsTe_Notoungulata_SALMA_smoothed_genus_level.txt",
header = TRUE)
species_list_idx <- read.table("./data_2023/PyRate/EXTENDED/SALMA_smoothed/genus_level/5-Order_level/Notoungulata_EOT_gen_occ_SALMA_smoothed_TaxonList.txt",
header = TRUE)
Ts_noto <- TsTe_noto %>%
select(matches("ts"))
Te_noto <- TsTe_noto %>%
select(matches("te"))
TsTe_noto <- TsTe_noto %>%
mutate(mean_ts = rowMeans(Ts_noto),
mean_te = rowMeans(Te_noto),
genus = species_list_idx$Species) %>%
select(genus, mean_ts, mean_te) %>%
rename(ts = "mean_ts", te = "mean_te") %>%
filter(ts > 23.03)
rm(Ts_noto, Te_noto)
# Families: table with each genus and its associated family
# Monophyletic families, according to Billet et al. (2011)
monophyl <- c("Homalodotheriidae", "Leontiniidae", "Toxodontidae",
"Interatheriidae", "Mesotheriidae", "Hegetotheriidae")
noto_genera <- spl %>%
filter(order == "Notoungulata") %>%
group_by(family, genus) %>%
distinct(genus)
# 3) Families plot
noto_fam <- spl %>%
filter(order == "Notoungulata") %>%
distinct(family) %>%
filter(!is.na(family), family %in% c("Homalodontotheridae", "Perutheriidae") == FALSE) %>% # Perutheriids and Homalodontotherids are just represented by a single occ
mutate(Ts = sapply(X = family, FUN = Ori_ext, gen_fam_tbl = noto_genera, TsTe_tbl = TsTe_noto, time = "Ts"),
Te = sapply(X = family, FUN = Ori_ext, gen_fam_tbl = noto_genera, TsTe_tbl = TsTe_noto, time = "Te"),
phyl = ifelse(family %in% monophyl, "Monophyletic", "Non-monophyletic")) %>%
arrange(Ts) %>%
ggplot(aes(y = fct_inorder(family), yend = fct_inorder(family))) +
geom_segment(aes(x = Ts, xend = Te, colour = phyl), linewidth = 2) +
scale_colour_manual(values = c("black", "grey60")) +
# add silhouette
add_phylopic(x = 48.5, y = 2.5, name = "Trigonostylops", ysize = 1.5) +
annotate(geom = "text", x = 48, y = 1.2, label = "Notoungulata", size = 6) +
scale_x_reverse(breaks = seq(from = 25, to = 50, by = 5)) +
labs(x = "Time (Ma)", y = "Family", colour = NULL) +
#EOT line
geom_vline(xintercept = 33.9, linetype="dashed", color = "red", linewidth = 0.8) +
annotate(geom = "text", x = 35, y = 16.5, label = " ") +
annotate(geom = "text", x = 35, y = 0.5, label = " ") +
coord_geo(pos = list("bottom", "bottom"),
dat = list(gsc2, gsc1),
abbrv = list(T, F),
center_end_labels = TRUE,
height = unit(1.5, "line"),
size = "auto",
xlim = c(24, 53)) +
theme(axis.title.x = element_text(size = 18),
axis.title.y = element_text(size = 18),
axis.text.x = element_text(size = 15),
axis.text.y = element_text(size = 10))
ggsave("./figures/Figure_3/Noto_families.pdf", noto_fam, height = 7, width = 10)
ggsave("./figures/Figure_3/Noto_families.png", noto_fam, height = 7, width = 10, dpi = 400)
################################################################################
# Name: 3bis-RTT_BDCS_panel.R
# Author: Lucas Buffan
# Contact: lucas.l.buffan@gmail.com
# Aim: Script for rates through time panel inferred with BDCS (4 treatments:
#     SALMA_kept/smoothed and rate shifts per epochs/5My bins)
################################################################################
## Load accessory functions and packages ---------------------------------------
source("~/Documents/GitHub/CorsaiR/R/1-extract_param_from_PyRate_outputs.R")
source("~/Documents/GitHub/CorsaiR/R/2-plotting_facilities.R")
library("readxl")
library("ggpubr")
## Specify geoscales -----------------------------------------------------------
# Sub-epochs
gsc2 <- read_xlsx("./data_2023/time_bins/EarlyMidLate_epochs.xlsx")
gsc2 <- gsc2 %>% rename(min_age = "min_ma", max_age = "max_ma", name = "interval_name")
# SALMAs
gsc3 <- read_xlsx("./data_2023/time_bins/SALMA_EOT.xlsx")
gsc3 <- gsc3 %>%
rename(min_age = "min_ma", max_age = "max_ma", name = "interval_name") %>%
mutate(min_age = sapply(min_age, as.numeric), max_age = sapply(max_age, as.numeric))
## Loop across the 4 treatments ------------------------------------------------
paths <- c("./results_EXTENDED/SALMA_smoothed/genus_level/1-Full/BDS/",
"./results_EXTENDED/SALMA_smoothed/genus_level/1-Full/BDS_5M/",
"./results_EXTENDED/SALMA_kept/genus_level/1-Full/BDS/",
"./results_EXTENDED/SALMA_kept/genus_level/1-Full/BDS_5M/")
list_plots <- list()
i <- 1
for(pth in paths){
# specify second geoscale
spl <- strsplit(pth, split = "/")[[1]]
if(spl[3] == "SALMA_smoothed"){
geoscale2 <- gsc2
}
else if(spl[3] == "SALMA_kept"){
geoscale2 <- gsc3
}
# specify bins used for constrained rate shifts
if(i %% 2 == 0){
bins <- "5M"
}
else{
bins <- "epochs"
}
# open rtt table
rtt_tbl <- extract_rtt(path = paste0(
pth, "combined_logs/",
list.files(paste0(pth, "combined_logs/"), pattern = '_RTT.r')
),
ana = "BDS")
# restrict plotting window
rtt_tbl <- rtt_tbl %>% filter(time > 24 & time <= 52)
# adjustments for plotting window
rtt_tbl$time[1] <- 24
rtt_tbl$time[nrow(rtt_tbl)] <- 52
# plotting aesthetics
x_lab <- "Time (Ma)"
x.axis <- TRUE
xlim <- NULL
display_gts <- TRUE
# plot
rtt_plt <- rtt_plot(data = rtt_tbl,
type = "SpEx",
y_limits = c(0, 0.45),
x_lab = x_lab,
stage_x_breaks = FALSE,
manual_x_breaks = seq(25, 50, 5),
main = paste0(spl[3], "_", bins),
axes.labelsize=15,
ticks.labelsize = 12,
restrict_y = TRUE,
restrict_thr = 0.45,
ori_col="#08519c",
ext_col="#a50f15",
display_gts = display_gts,
xlim = xlim,
plot.border = FALSE,
x.axis = x.axis,
display_EECO_MECO = TRUE,
several_gts = TRUE,
geoscale2 = geoscale2,
geoscale_height = unit(1, "line"),
abbr = list(TRUE, FALSE)) +
# Temporal bands
annotate(geom = "rect", xmin = 47.8, xmax = Inf, fill = "grey10", ymin = -Inf, ymax = Inf, alpha = 0.1, linewidth = 0) +
annotate(geom = "rect", xmin = 33.9, xmax = 37.71, fill = "grey10", ymin = -Inf, ymax = Inf, alpha = 0.1, linewidth = 0) +
annotate(geom = "rect", xmin = -Inf, xmax = 27.8, fill = "grey10", ymin = -Inf, ymax = Inf, alpha = 0.1, linewidth = 0) +
# EOT line
geom_vline(xintercept = 33.9, linetype="dashed", color = "red", linewidth = 0.8) # EOT
## Add to plot list
list_plots[[i]] <- rtt_plt
i <- i+1
}
## Assemble and save -----------------------------------------------------------
tot <-  ggarrange(plotlist = list_plots, nrow = 2, ncol = 2)
#ggsave("./figures/supp_figs/rtt_BDCS.pdf", height = 300, width = 350, units = "mm")
ggsave("./figures/supp_figs/rtt_BDCS.png", height = 300, width = 350, units = "mm", dpi = 600)
################################################################################
# Name: 3bis-RTT_BDCS_panel.R
# Author: Lucas Buffan
# Contact: lucas.l.buffan@gmail.com
# Aim: Script for rates through time panel inferred with BDCS (4 treatments:
#     SALMA_kept/smoothed and rate shifts per epochs/5My bins)
################################################################################
## Load accessory functions and packages ---------------------------------------
source("~/Documents/GitHub/CorsaiR/R/1-extract_param_from_PyRate_outputs.R")
source("~/Documents/GitHub/CorsaiR/R/2-plotting_facilities.R")
library("readxl")
library("ggpubr")
## Specify geoscales -----------------------------------------------------------
# Sub-epochs
gsc2 <- read_xlsx("./data_2023/time_bins/EarlyMidLate_epochs.xlsx")
gsc2 <- gsc2 %>% rename(min_age = "min_ma", max_age = "max_ma", name = "interval_name")
# SALMAs
gsc3 <- read_xlsx("./data_2023/time_bins/SALMA_EOT.xlsx")
gsc3 <- gsc3 %>%
rename(min_age = "min_ma", max_age = "max_ma", name = "interval_name") %>%
mutate(min_age = sapply(min_age, as.numeric), max_age = sapply(max_age, as.numeric))
## Loop across the 4 treatments ------------------------------------------------
paths <- c("./results_EXTENDED/SALMA_smoothed/genus_level/1-Full/BDS/",
"./results_EXTENDED/SALMA_smoothed/genus_level/1-Full/BDS_5M/",
"./results_EXTENDED/SALMA_kept/genus_level/1-Full/BDS/",
"./results_EXTENDED/SALMA_kept/genus_level/1-Full/BDS_5M/")
list_plots <- list()
i <- 1
for(pth in paths){
# specify second geoscale
spl <- strsplit(pth, split = "/")[[1]]
if(spl[3] == "SALMA_smoothed"){
geoscale2 <- gsc2
}
else if(spl[3] == "SALMA_kept"){
geoscale2 <- gsc3
}
# specify bins used for constrained rate shifts
if(i %% 2 == 0){
bins <- "5M"
}
else{
bins <- "epochs"
}
# open rtt table
rtt_tbl <- extract_rtt(path = paste0(
pth, "combined_logs/",
list.files(paste0(pth, "combined_logs/"), pattern = '_RTT.r')
),
ana = "BDS")
# restrict plotting window
rtt_tbl <- rtt_tbl %>% filter(time > 24 & time <= 52)
# adjustments for plotting window
rtt_tbl$time[1] <- 24
rtt_tbl$time[nrow(rtt_tbl)] <- 52
# plotting aesthetics
x_lab <- "Time (Ma)"
x.axis <- TRUE
xlim <- NULL
display_gts <- TRUE
# plot
rtt_plt <- rtt_plot(data = rtt_tbl,
type = "SpEx",
y_limits = c(0, 0.45),
x_lab = x_lab,
stage_x_breaks = FALSE,
manual_x_breaks = seq(25, 50, 5),
main = paste0(spl[3], "_", bins),
axes.labelsize=15,
ticks.labelsize = 12,
restrict_y = TRUE,
restrict_thr = 0.45,
ori_col="#08519c",
ext_col="#a50f15",
display_gts = display_gts,
xlim = xlim,
plot.border = FALSE,
x.axis = x.axis,
display_EECO_MECO = TRUE,
several_gts = TRUE,
geoscale2 = geoscale2,
geoscale_height = unit(1, "line"),
abbr = list(TRUE, FALSE)) +
# Temporal bands
annotate(geom = "rect", xmin = 47.8, xmax = Inf, fill = "grey10", ymin = -Inf, ymax = Inf, alpha = 0.1, linewidth = 0) +
annotate(geom = "rect", xmin = 33.9, xmax = 37.71, fill = "grey10", ymin = -Inf, ymax = Inf, alpha = 0.1, linewidth = 0) +
annotate(geom = "rect", xmin = -Inf, xmax = 27.8, fill = "grey10", ymin = -Inf, ymax = Inf, alpha = 0.1, linewidth = 0) +
# EOT line
geom_vline(xintercept = 33.9, linetype="dashed", color = "red", linewidth = 0.8) # EOT
if(i == 1){
rtt_plt <- rtt_plt +
annotate(geom = "segment", x = 47, xend = 50, y = 0.4, yend = 0.4, colour = "#08519c", linewidth = 1) +
annotate(geom = "text", x = 41.5, y = 0.4, label = "Origination rate", size = 5) +
annotate(geom = "segment", x = 47, xend = 50, y = 0.35, yend = 0.35, colour = "#a50f15", linewidth = 1) +
annotate(geom = "text", x = 41.5, y = 0.35, label = "Extinction rate ", size = 5)
}
## Add to plot list
list_plots[[i]] <- rtt_plt
i <- i+1
}
## Assemble and save -----------------------------------------------------------
tot <-  ggarrange(plotlist = list_plots, nrow = 2, ncol = 2)
ggsave("./figures/supp_figs/rtt_BDCS.pdf", height = 300, width = 350, units = "mm")
ggsave("./figures/supp_figs/rtt_BDCS.png", height = 300, width = 350, units = "mm", dpi = 600)
################################################################################
# Name: 3bis-RTT_BDCS_panel.R
# Author: Lucas Buffan
# Contact: lucas.l.buffan@gmail.com
# Aim: Script for rates through time panel inferred with BDCS (4 treatments:
#     SALMA_kept/smoothed and rate shifts per epochs/5My bins)
################################################################################
## Load accessory functions and packages ---------------------------------------
source("~/Documents/GitHub/CorsaiR/R/1-extract_param_from_PyRate_outputs.R")
source("~/Documents/GitHub/CorsaiR/R/2-plotting_facilities.R")
library("readxl")
library("ggpubr")
## Specify geoscales -----------------------------------------------------------
# Sub-epochs
gsc2 <- read_xlsx("./data_2023/time_bins/EarlyMidLate_epochs.xlsx")
gsc2 <- gsc2 %>% rename(min_age = "min_ma", max_age = "max_ma", name = "interval_name")
# SALMAs
gsc3 <- read_xlsx("./data_2023/time_bins/SALMA_EOT.xlsx")
gsc3 <- gsc3 %>%
rename(min_age = "min_ma", max_age = "max_ma", name = "interval_name") %>%
mutate(min_age = sapply(min_age, as.numeric), max_age = sapply(max_age, as.numeric))
## Loop across the 4 treatments ------------------------------------------------
paths <- c("./results_EXTENDED/SALMA_smoothed/genus_level/1-Full/BDS/",
"./results_EXTENDED/SALMA_smoothed/genus_level/1-Full/BDS_5M/",
"./results_EXTENDED/SALMA_kept/genus_level/1-Full/BDS/",
"./results_EXTENDED/SALMA_kept/genus_level/1-Full/BDS_5M/")
list_plots <- list()
i <- 1
for(pth in paths){
# specify second geoscale
spl <- strsplit(pth, split = "/")[[1]]
if(spl[3] == "SALMA_smoothed"){
geoscale2 <- gsc2
}
else if(spl[3] == "SALMA_kept"){
geoscale2 <- gsc3
}
# specify bins used for constrained rate shifts
if(i %% 2 == 0){
bins <- "5M"
}
else{
bins <- "epochs"
}
# open rtt table
rtt_tbl <- extract_rtt(path = paste0(
pth, "combined_logs/",
list.files(paste0(pth, "combined_logs/"), pattern = '_RTT.r')
),
ana = "BDS")
# restrict plotting window
rtt_tbl <- rtt_tbl %>% filter(time > 24 & time <= 52)
# adjustments for plotting window
rtt_tbl$time[1] <- 24
rtt_tbl$time[nrow(rtt_tbl)] <- 52
# plotting aesthetics
x_lab <- "Time (Ma)"
x.axis <- TRUE
xlim <- NULL
display_gts <- TRUE
# plot
rtt_plt <- rtt_plot(data = rtt_tbl,
type = "SpEx",
y_limits = c(0, 0.45),
x_lab = x_lab,
stage_x_breaks = FALSE,
manual_x_breaks = seq(25, 50, 5),
main = paste0(spl[3], "_", bins),
axes.labelsize=15,
ticks.labelsize = 12,
restrict_y = TRUE,
restrict_thr = 0.45,
ori_col="#08519c",
ext_col="#a50f15",
display_gts = display_gts,
xlim = xlim,
plot.border = FALSE,
x.axis = x.axis,
display_EECO_MECO = TRUE,
several_gts = TRUE,
geoscale2 = geoscale2,
geoscale_height = unit(1, "line"),
abbr = list(TRUE, FALSE)) +
# Temporal bands
annotate(geom = "rect", xmin = 47.8, xmax = Inf, fill = "grey10", ymin = -Inf, ymax = Inf, alpha = 0.1, linewidth = 0) +
annotate(geom = "rect", xmin = 33.9, xmax = 37.71, fill = "grey10", ymin = -Inf, ymax = Inf, alpha = 0.1, linewidth = 0) +
annotate(geom = "rect", xmin = -Inf, xmax = 27.8, fill = "grey10", ymin = -Inf, ymax = Inf, alpha = 0.1, linewidth = 0) +
# EOT line
geom_vline(xintercept = 33.9, linetype="dashed", color = "red", linewidth = 0.8) # EOT
if(i == 1){
rtt_plt <- rtt_plt +
annotate(geom = "segment", x = 47, xend = 50, y = 0.4, yend = 0.4, colour = "#08519c", linewidth = 1) +
annotate(geom = "text", x = 43, y = 0.4, label = "Origination rate", size = 5) +
annotate(geom = "segment", x = 47, xend = 50, y = 0.37, yend = 0.37, colour = "#a50f15", linewidth = 1) +
annotate(geom = "text", x = 43, y = 0.37, label = "Extinction rate ", size = 5)
}
## Add to plot list
list_plots[[i]] <- rtt_plt
i <- i+1
}
## Assemble and save -----------------------------------------------------------
tot <-  ggarrange(plotlist = list_plots, nrow = 2, ncol = 2)
ggsave("./figures/supp_figs/rtt_BDCS.pdf", height = 300, width = 350, units = "mm")
ggsave("./figures/supp_figs/rtt_BDCS.png", height = 300, width = 350, units = "mm", dpi = 600)
View(rtt_tbl)
