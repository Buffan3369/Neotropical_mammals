display_EECO_MECO = TRUE,
several_gts = TRUE,
geoscale2 = gsc2,
geoscale_height = unit(1, "line"),
abbr = list(TRUE, FALSE)) +
# Temporal bands
annotate(geom = "rect", xmin = 47.8, xmax = Inf, fill = "grey10", ymin = -Inf, ymax = Inf, alpha = 0.1, linewidth = 0) +
annotate(geom = "rect", xmin = 33.9, xmax = 37.71, fill = "grey10", ymin = -Inf, ymax = Inf, alpha = 0.1, linewidth = 0) +
annotate(geom = "rect", xmin = -Inf, xmax = 27.8, fill = "grey10", ymin = -Inf, ymax = Inf, alpha = 0.1, linewidth = 0) +
geom_vline(xintercept = 33.9, linetype="dashed", color = "red", linewidth = 0.8) # EOT
#add labels in the first line
if(i == 2){
net_plt <- net_plt +
annotate(geom = "segment", x = 47, xend = 50, y = 0.4, yend = 0.4, colour = "#504A4B", linewidth = 1) +
annotate(geom = "text", x = 40.5, y = 0.4, label = "Net diversification\n rate", size = 5) +
annotate(geom = "text", x = 31.5, y = 0.5, label = "EOT", size = 7, colour = "red") +
geom_text(aes(x = 51.5, y = -0.45, label = "EECO"), angle = 90, colour = "bisque4") +
geom_text(aes(x = 41.25, y = -0.45, label = "MECO"), angle = 90, colour = "bisque4")
}
plot_list[[i+j]] <- net_plt
#add blank element to plot list
j <- j+1
plot_list[[i+j]] <- NULL
# LTT plot --------------------------
i <- i+1
if(i >= 17){
x_lab <- "Time (Ma)"
x.axis <- TRUE
xlim <- NULL
display_gts <- TRUE
}
ltt <- list.files(paste0(pth, "LTT/"), pattern = "_ltt.txt")
ltt_tbl <- read.table(paste0(pth, "LTT/", ltt), header = TRUE)
ltt_tbl <- ltt_tbl %>%
rename("Age" = time, "Diversity" = diversity, "min_Diversity" = m_div, "max_Diversity" = M_div) %>%
filter(Age > 24 & Age < 52)
# plotting adjustments
ltt_tbl$Age[1] <- 24
ltt_tbl$Age[nrow(ltt_tbl)] <- 52
# plot
ltt.plot <- ltt_plot(ltt_tbl,
stage_x_breaks = FALSE,
manual_x_breaks = seq(25, 50, 5),
axes.labelsize=15,
ticks.labelsize = 12,
x_lab = x_lab,
y_breaks = seq(0,(round(max(ltt_tbl$Diversity), -1) + 10),20),
y_limits = c(0,(round(max(ltt_tbl$Diversity), -1) + 20)),
display_gts = display_gts,
xlim = xlim,
avg_col = "#006d2c",
ribbon_col = "#74c476",
plot.border = FALSE,
x.axis = x.axis,
display_EECO_MECO = TRUE,
several_gts = TRUE,
geoscale2 = gsc2,
geoscale_height = unit(1, "line"),
geoscale_labelsize = 4,
abbr = list(TRUE, FALSE)) +
annotate(geom = "rect", xmin = 47.8, xmax = Inf, fill = "grey10", ymin = -Inf, ymax = Inf, alpha = 0.1, linewidth = 0) +
annotate(geom = "rect", xmin = 33.9, xmax = 37.71, fill = "grey10", ymin = -Inf, ymax = Inf, alpha = 0.1, linewidth = 0) +
annotate(geom = "rect", xmin = -Inf, xmax = 27.8, fill = "grey10", ymin = -Inf, ymax = Inf, alpha = 0.1, linewidth = 0) +
geom_vline(xintercept = 33.9, linetype="dashed", color = "red", linewidth = 0.8)  # EOT line
#add labels in the first line
if(i == 3){
ltt.plot <- ltt.plot +
annotate(geom = "segment", x = 45, xend = 47.5, y = 55, yend = 55, colour = "#006d2c", linewidth = 1) +
annotate(geom = "text", x = 42, y = 55, label = "Diversity", size = 5) +
annotate(geom = "text", x = 31.5, y = 57, label = "EOT", size = 7, colour = "red") +
geom_text(aes(x = 51.5, y = 5, label = "EECO"), angle = 90, colour = "bisque4") +
geom_text(aes(x = 41.25, y = 5, label = "MECO"), angle = 90, colour = "bisque4")
}
plot_list[[i+j]] <- ltt.plot
#add blank element to plot list
j <- j+1
plot_list[[i+j]] <- NULL
# Silhouette plot
i <- i+1
group <- strsplit(pth, split = "/")[[1]]
group <- group[length(group)]
corr_silhouette <- as.character(values(sil[group]))
sil_plot <- ggplot(df) +
add_phylopic(x = 5, y = 5, name = corr_silhouette, ysize = 0.8) +
annotate(geom = "text", x = 5, y = 4.1, label = group, size = 8) +
xlim(4.5,5.5) +
ylim(4,6) +
theme(panel.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
panel.border = element_blank())
plot_list[[i+j]] <- sil_plot
}
fig2 <- ggarrange(plotlist = plot_list, nrow = 5, ncol = 7,
heights = c(1, 1, 1, 1, 1.25),
widths = c(1, 0.05, 1, 0.05, 1, 0, 0.5),
labels = c("(A)", NA, "(B)", NA, "(C)", NA, NA,
"(D)",  NA, "(E)", NA, "(F)", NA, NA,
"(G)",  NA, "(H)",  NA, "(I)", NA, NA,
"(J)",  NA, "(K)",  NA, "(L)", NA, NA,
"(M)",  NA, "(N)",  NA, "(O)", NA, NA),
hjust = -0.4,
font.label = list(size = 18))
fig2
ggsave("./figures/Figure_2/Figure2_extended.png",
plot = fig2,
height = 500,
width = 600,
units = "mm",
dpi = 300)
ggsave("./figures/Figure_2/Figure2_extended.pdf",
plot = fig2,
height = 500,
width = 600,
units = "mm")
rm(list = ls())
library(tidyverse)
library(deeptime)
library(ggpubr)
library(rphylopic)
# Open species List
spl <- readRDS("./data_2023/SPECIES_LISTS/7-Fully_cleaned_EOT_extended_SA_Mammals_SALMA_kept_Tropics_Diet.RDS")
# Function returning estimated age boundaries of a family
Ori_ext <- function(fam, gen_fam_tbl, TsTe_tbl, time = c("Ts", "Te")){
tmp_fam <- gen_fam_tbl %>% filter(family == fam)
TsTe_tmp <- TsTe_tbl %>% filter(genus %in% tmp_fam$genus)
if(time == "Ts"){
return(max(TsTe_tmp$ts))
}
else if(time == "Te"){
return(min(TsTe_tmp$te))
}
}
# GEOSCALES
# First geoscale
gsc1 <- deeptime::epochs
gsc1 <- gsc1 %>% filter(min_age < 56)
# Set second geoscale
gsc2 <- read_xlsx("./data_2023/time_bins/EarlyMidLate_epochs.xlsx")
gsc2 <- gsc2 %>% rename(min_age = "min_ma", max_age = "max_ma", name = "interval_name")
library(tidyverse)
# Set second geoscale
gsc2 <- read_xlsx("./data_2023/time_bins/EarlyMidLate_epochs.xlsx")
library(readxl)
# Set second geoscale
gsc2 <- read_xlsx("./data_2023/time_bins/EarlyMidLate_epochs.xlsx")
gsc2 <- gsc2 %>% rename(min_age = "min_ma", max_age = "max_ma", name = "interval_name")
TsTe_met <- read.table("./results_EXTENDED/SALMA_smoothed/genus_level/6-Order_level/Metatheria/BDCS/TsTe_Metatheria_SALMA_smoothed_genus_level.txt", header = T)
species_list_idx <- read.table("./data_2023/PyRate/EXTENDED/SALMA_smoothed/genus_level/5-Order_level/Metatheria_EOT_gen_occ_SALMA_smoothed_TaxonList.txt", header = T)
species_list_idx <- species_list_idx %>%
filter(Species != "Gaylordia") %>%
mutate(order = sapply(X = Species, FUN = function(x){unique(spl$order[which(spl$genus == x)])}),
family = sapply(X = Species, FUN = function(x){unique(spl$family[which(spl$genus == x)])}))
#higher-level taxonomy
syst <- read.csv("./data_2023/systematics/metatheria_genera_EOT.csv")
# add relevant info
Ts_met <- TsTe_met %>%
select(matches("ts"))
Te_met <- TsTe_met %>%
select(matches("te"))
TsTe_met <-TsTe_met %>%
mutate(mean_ts = rowMeans(Ts_met),
mean_te = rowMeans(Te_met),
genus = species_list_idx$Species,
order = species_list_idx$order) %>%
select(order, genus, mean_ts, mean_te)
rm(Ts_met, Te_met)
TsTe_met <- TsTe_met %>%
add_column(suborder = sapply(X = TsTe_met$genus, FUN = function(x){syst$suborder[which(syst$genus == x)]}),
superfamily = sapply(X = TsTe_met$genus, FUN = function(x){syst$superfamily[which(syst$genus == x)]}),
family = sapply(X = TsTe_met$genus, FUN = function(x){syst$family[which(syst$genus == x)]}),
.before = "genus")
unique(is.na(TsTe_met$family))
unique(is.na(TsTe_met$family) == FALSE)
unique(TsTe_met$family)
df <- TsTe_met %>% count(family)
View(df)
df <- TsTe_met %>% count(family) %>% arrange(n)
View(df)
unique(TsTe_met$superfamily)
#higher-level taxonomy
syst <- read.csv("./data_2023/systematics/metatheria_genera_EOT.csv")
# add relevant info
Ts_met <- TsTe_met %>%
select(matches("ts"))
Te_met <- TsTe_met %>%
select(matches("te"))
TsTe_met <-TsTe_met %>%
mutate(mean_ts = rowMeans(Ts_met),
mean_te = rowMeans(Te_met),
genus = species_list_idx$Species,
order = species_list_idx$order) %>%
select(order, genus, mean_ts, mean_te)
rm(Ts_met, Te_met)
TsTe_met <- read.table("./results_EXTENDED/SALMA_smoothed/genus_level/6-Order_level/Metatheria/BDCS/TsTe_Metatheria_SALMA_smoothed_genus_level.txt", header = T)
species_list_idx <- read.table("./data_2023/PyRate/EXTENDED/SALMA_smoothed/genus_level/5-Order_level/Metatheria_EOT_gen_occ_SALMA_smoothed_TaxonList.txt", header = T)
species_list_idx <- species_list_idx %>%
filter(Species != "Gaylordia") %>%
mutate(order = sapply(X = Species, FUN = function(x){unique(spl$order[which(spl$genus == x)])}),
family = sapply(X = Species, FUN = function(x){unique(spl$family[which(spl$genus == x)])}))
#higher-level taxonomy
syst <- read.csv("./data_2023/systematics/metatheria_genera_EOT.csv")
# add relevant info
Ts_met <- TsTe_met %>%
select(matches("ts"))
Te_met <- TsTe_met %>%
select(matches("te"))
TsTe_met <-TsTe_met %>%
mutate(mean_ts = rowMeans(Ts_met),
mean_te = rowMeans(Te_met),
genus = species_list_idx$Species,
order = species_list_idx$order) %>%
select(order, genus, mean_ts, mean_te)
rm(Ts_met, Te_met)
TsTe_met <- TsTe_met %>%
add_column(retained_scale = sapply(X = TsTe_met$genus, FUN = function(x){syst$retained_scale[which(syst$genus == x)]}),
.before = "genus")
View(TsTe_met)
unique(TsTe_met$retained_scale)
TsTe_met1 <- TsTe_met %>%
arrange(ts) %>%
mutate(retained_scale = sapply(X = retained_scale, FUN = function(x){
if(x %in% c("Didelphidae", "")){
return("Others")
}
else{
return(x)
}
})) %>%
mutate(retained_scale = factor(retained_scale, levels = c("Microbiotheria", "Caenolestidae", "Palaeothetoidea",
"Argyrolagidae", "Bonapartherioidea", "Polydolopidae",
"Borhyaenoidea", "Hathliacynidae"))) %>%
mutate(y_colour = sapply(X = retained_scale, FUN = function(x){
if(x == "Microbiotheria"){
return("#238443")
}
else if(x == "Caenolestidae"){
return("#034e7b")
}
else if(x == "Palaeothetoidea"){
return("#3690c0")
}
else if(x == "Argyrolagidae"){
return("#4a1486")
}
else if(x == "Bonapartherioidea"){
return("#7a0177")
}
else if(x == "Polydolopidae"){
return("#df65b0")
}
else if(x == "Borhyaenoidea"){
return("#b10026")
}
else if(x == "Hathliacynidae"){
return("#fd8d3c")
}
else{
return("black")
}
}))
TsTe_met1 <- TsTe_met %>%
arrange(mean_ts) %>%
mutate(retained_scale = sapply(X = retained_scale, FUN = function(x){
if(x %in% c("Didelphidae", "")){
return("Others")
}
else{
return(x)
}
})) %>%
mutate(retained_scale = factor(retained_scale, levels = c("Microbiotheria", "Caenolestidae", "Palaeothetoidea",
"Argyrolagidae", "Bonapartherioidea", "Polydolopidae",
"Borhyaenoidea", "Hathliacynidae"))) %>%
mutate(y_colour = sapply(X = retained_scale, FUN = function(x){
if(x == "Microbiotheria"){
return("#238443")
}
else if(x == "Caenolestidae"){
return("#034e7b")
}
else if(x == "Palaeothetoidea"){
return("#3690c0")
}
else if(x == "Argyrolagidae"){
return("#4a1486")
}
else if(x == "Bonapartherioidea"){
return("#7a0177")
}
else if(x == "Polydolopidae"){
return("#df65b0")
}
else if(x == "Borhyaenoidea"){
return("#b10026")
}
else if(x == "Hathliacynidae"){
return("#fd8d3c")
}
else{
return("black")
}
}))
TsTe_met1 <- TsTe_met %>%
arrange(mean_ts) %>%
mutate(retained_scale = sapply(X = retained_scale, FUN = function(x){
if(x %in% c("Didelphidae", "")){
return("Others")
}
else{
return(x)
}
}))
View(TsTe_met1)
TsTe_met1 <- TsTe_met %>%
arrange(mean_ts) %>%
mutate(retained_scale = sapply(X = retained_scale, FUN = function(x){
if(x %in% c("Didelphidae", "")){
return("Others")
}
else{
return(x)
}
})) %>%
mutate(retained_scale = factor(retained_scale, levels = c("Microbiotheria", "Caenolestidae", "Palaeothetoidea",
"Argyrolagidae", "Bonapartherioidea", "Polydolopidae",
"Borhyaenoidea", "Hathliacynidae")))
TsTe_met1 <- TsTe_met %>%
arrange(mean_ts) %>%
mutate(retained_scale = sapply(X = retained_scale, FUN = function(x){
if(x %in% c("Didelphidae", "")){
return("Others")
}
else{
return(x)
}
})) %>%
mutate(retained_scale = factor(retained_scale, levels = c("Microbiotheria", "Caenolestidae", "Palaeothetoidea",
"Argyrolagidae", "Bonapartherioidea", "Polydolopidae",
"Borhyaenoidea", "Hathliacynidae"))) %>%
TsTe_met1 <- TsTe_met1 %>% mutate(y_colour = sapply(X = retained_scale, FUN = function(x){
if(x == "Microbiotheria"){
return("#238443")
}
else if(x == "Caenolestidae"){
return("#034e7b")
}
else if(x == "Palaeothetoidea"){
return("#3690c0")
}
else if(x == "Argyrolagidae"){
return("#4a1486")
}
else if(x == "Bonapartherioidea"){
return("#7a0177")
}
else if(x == "Polydolopidae"){
return("#df65b0")
}
else if(x == "Borhyaenoidea"){
return("#b10026")
}
else if(x == "Hathliacynidae"){
return("#fd8d3c")
}
else{
return("black")
}
}))
for(x in TsTe_met1$retained_scale){
if(x == "Microbiotheria"){
print("#238443")
}
else if(x == "Caenolestidae"){
print("#034e7b")
}
else if(x == "Palaeothetoidea"){
print("#3690c0")
}
else if(x == "Argyrolagidae"){
print("#4a1486")
}
else if(x == "Bonapartherioidea"){
print("#7a0177")
}
else if(x == "Polydolopidae"){
print("#df65b0")
}
else if(x == "Borhyaenoidea"){
print("#b10026")
}
else if(x == "Hathliacynidae"){
print("#fd8d3c")
}
else{
print("black")
}
}
TsTe_met1$retained_scale
TsTe_met1 <- TsTe_met %>%
arrange(mean_ts) %>%
mutate(retained_scale = sapply(X = retained_scale, FUN = function(x){
if(x %in% c("Didelphidae", "") | is.na(x)){
return("Others")
}
else{
return(x)
}
})) %>%
mutate(retained_scale = factor(retained_scale, levels = c("Microbiotheria", "Caenolestidae", "Palaeothetoidea",
"Argyrolagidae", "Bonapartherioidea", "Polydolopidae",
"Borhyaenoidea", "Hathliacynidae"))) %>%
mutate(y_colour = sapply(X = retained_scale, FUN = function(x){
if(x == "Microbiotheria"){
return("#238443")
}
else if(x == "Caenolestidae"){
return("#034e7b")
}
else if(x == "Palaeothetoidea"){
return("#3690c0")
}
else if(x == "Argyrolagidae"){
return("#4a1486")
}
else if(x == "Bonapartherioidea"){
return("#7a0177")
}
else if(x == "Polydolopidae"){
return("#df65b0")
}
else if(x == "Borhyaenoidea"){
return("#b10026")
}
else if(x == "Hathliacynidae"){
return("#fd8d3c")
}
else{
return("black")
}
}))
TsTe_met1 <- TsTe_met %>%
arrange(mean_ts) %>%
mutate(retained_scale = sapply(X = retained_scale, FUN = function(x){
if(x %in% c("Didelphidae", "") | is.na(x)){
return("Others")
}
else{
return(x)
}
})) %>%
mutate(retained_scale = factor(retained_scale, levels = c("Microbiotheria", "Caenolestidae", "Palaeothetoidea",
"Argyrolagidae", "Bonapartherioidea", "Polydolopidae",
"Borhyaenoidea", "Hathliacynidae")))
View(TsTe_met1)
TsTe_met$retained_scale
TsTe_met1 <- TsTe_met %>%
arrange(mean_ts) %>%
mutate(retained_scale = sapply(X = retained_scale, FUN = function(x){
if(x == "Didelphidae"){
return("Others")
}
else if(is.na(x)){
return("Others")
}
else{
return(x)
}
})) %>%
mutate(retained_scale = factor(retained_scale, levels = c("Microbiotheria", "Caenolestidae", "Palaeothetoidea",
"Argyrolagidae", "Bonapartherioidea", "Polydolopidae",
"Borhyaenoidea", "Hathliacynidae")))
View(TsTe_met1)
TsTe_met1 <- TsTe_met %>%
arrange(mean_ts) %>%
mutate(retained_scale = sapply(X = retained_scale, FUN = function(x){
if(is.na(x)){
return("Others")
}
else if(x == "Didelphidae"){
return("Others")
}
else{
return(x)
}
})) %>%
mutate(retained_scale = factor(retained_scale, levels = c("Microbiotheria", "Caenolestidae", "Palaeothetoidea",
"Argyrolagidae", "Bonapartherioidea", "Polydolopidae",
"Borhyaenoidea", "Hathliacynidae")))
View(TsTe_met1)
TsTe_met1 <- TsTe_met %>%
arrange(mean_ts) %>%
mutate(retained_scale1 = sapply(X = retained_scale, FUN = function(x){
if(is.na(x)){
return("Others")
}
else if(x == "Didelphidae"){
return("Others")
}
else{
return(x)
}
})) %>%
mutate(retained_scale = factor(retained_scale, levels = c("Microbiotheria", "Caenolestidae", "Palaeothetoidea",
"Argyrolagidae", "Bonapartherioidea", "Polydolopidae",
"Borhyaenoidea", "Hathliacynidae")))
View(TsTe_met1)
